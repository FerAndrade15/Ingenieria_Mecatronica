
Slave2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000010d6  0000116a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800104  00800104  0000116e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000116e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  0000120c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fda  00000000  00000000  0000133c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aac  00000000  00000000  00002316  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae2  00000000  00000000  00002dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  000038a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000623  00000000  00000000  00003ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a16  00000000  00000000  000041cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004be1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	0c 94 32 01 	jmp	0x264	; 0x264 <__vector_21>
      58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      60:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_24>
      64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      68:	b1 00       	.word	0x00b1	; ????
      6a:	b7 00       	.word	0x00b7	; ????
      6c:	be 00       	.word	0x00be	; ????
      6e:	c5 00       	.word	0x00c5	; ????
      70:	cc 00       	.word	0x00cc	; ????
      72:	d3 00       	.word	0x00d3	; ????
      74:	da 00       	.word	0x00da	; ????
      76:	e1 00       	.word	0x00e1	; ????
      78:	e8 00       	.word	0x00e8	; ????

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf ef       	ldi	r28, 0xFF	; 255
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e0       	ldi	r26, 0x00	; 0
      8a:	b1 e0       	ldi	r27, 0x01	; 1
      8c:	e6 ed       	ldi	r30, 0xD6	; 214
      8e:	f0 e1       	ldi	r31, 0x10	; 16
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	a4 30       	cpi	r26, 0x04	; 4
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	21 e0       	ldi	r18, 0x01	; 1
      9e:	a4 e0       	ldi	r26, 0x04	; 4
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	af 30       	cpi	r26, 0x0F	; 15
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
      b0:	0c 94 69 08 	jmp	0x10d2	; 0x10d2 <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <initADC>:
      b8:	ec e7       	ldi	r30, 0x7C	; 124
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	10 82       	st	Z, r1
      be:	80 81       	ld	r24, Z
      c0:	80 64       	ori	r24, 0x40	; 64
      c2:	80 83       	st	Z, r24
      c4:	80 81       	ld	r24, Z
      c6:	8f 77       	andi	r24, 0x7F	; 127
      c8:	80 83       	st	Z, r24
      ca:	80 81       	ld	r24, Z
      cc:	80 62       	ori	r24, 0x20	; 32
      ce:	80 83       	st	Z, r24
      d0:	ea e7       	ldi	r30, 0x7A	; 122
      d2:	f0 e0       	ldi	r31, 0x00	; 0
      d4:	10 82       	st	Z, r1
      d6:	80 81       	ld	r24, Z
      d8:	80 68       	ori	r24, 0x80	; 128
      da:	80 83       	st	Z, r24
      dc:	80 81       	ld	r24, Z
      de:	88 60       	ori	r24, 0x08	; 8
      e0:	80 83       	st	Z, r24
      e2:	80 81       	ld	r24, Z
      e4:	87 60       	ori	r24, 0x07	; 7
      e6:	80 83       	st	Z, r24
      e8:	08 95       	ret

000000ea <pinADC>:
      ea:	82 30       	cpi	r24, 0x02	; 2
      ec:	c1 f0       	breq	.+48     	; 0x11e <pinADC+0x34>
      ee:	28 f4       	brcc	.+10     	; 0xfa <pinADC+0x10>
      f0:	88 23       	and	r24, r24
      f2:	49 f0       	breq	.+18     	; 0x106 <pinADC+0x1c>
      f4:	81 30       	cpi	r24, 0x01	; 1
      f6:	69 f0       	breq	.+26     	; 0x112 <pinADC+0x28>
      f8:	08 95       	ret
      fa:	84 30       	cpi	r24, 0x04	; 4
      fc:	e1 f0       	breq	.+56     	; 0x136 <pinADC+0x4c>
      fe:	a8 f0       	brcs	.+42     	; 0x12a <pinADC+0x40>
     100:	85 30       	cpi	r24, 0x05	; 5
     102:	f9 f0       	breq	.+62     	; 0x142 <pinADC+0x58>
     104:	08 95       	ret
     106:	ee e7       	ldi	r30, 0x7E	; 126
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	81 60       	ori	r24, 0x01	; 1
     10e:	80 83       	st	Z, r24
     110:	08 95       	ret
     112:	ee e7       	ldi	r30, 0x7E	; 126
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	82 60       	ori	r24, 0x02	; 2
     11a:	80 83       	st	Z, r24
     11c:	08 95       	ret
     11e:	ee e7       	ldi	r30, 0x7E	; 126
     120:	f0 e0       	ldi	r31, 0x00	; 0
     122:	80 81       	ld	r24, Z
     124:	84 60       	ori	r24, 0x04	; 4
     126:	80 83       	st	Z, r24
     128:	08 95       	ret
     12a:	ee e7       	ldi	r30, 0x7E	; 126
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	80 81       	ld	r24, Z
     130:	88 60       	ori	r24, 0x08	; 8
     132:	80 83       	st	Z, r24
     134:	08 95       	ret
     136:	ee e7       	ldi	r30, 0x7E	; 126
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	80 61       	ori	r24, 0x10	; 16
     13e:	80 83       	st	Z, r24
     140:	08 95       	ret
     142:	ee e7       	ldi	r30, 0x7E	; 126
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	80 81       	ld	r24, Z
     148:	80 62       	ori	r24, 0x20	; 32
     14a:	80 83       	st	Z, r24
     14c:	08 95       	ret

0000014e <read_channelADC>:
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	89 30       	cpi	r24, 0x09	; 9
     152:	91 05       	cpc	r25, r1
     154:	08 f0       	brcs	.+2      	; 0x158 <read_channelADC+0xa>
     156:	42 c0       	rjmp	.+132    	; 0x1dc <read_channelADC+0x8e>
     158:	fc 01       	movw	r30, r24
     15a:	ec 5c       	subi	r30, 0xCC	; 204
     15c:	ff 4f       	sbci	r31, 0xFF	; 255
     15e:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__tablejump2__>
     162:	ec e7       	ldi	r30, 0x7C	; 124
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	80 7f       	andi	r24, 0xF0	; 240
     16a:	80 83       	st	Z, r24
     16c:	37 c0       	rjmp	.+110    	; 0x1dc <read_channelADC+0x8e>
     16e:	ec e7       	ldi	r30, 0x7C	; 124
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	80 7f       	andi	r24, 0xF0	; 240
     176:	81 60       	ori	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
     17a:	30 c0       	rjmp	.+96     	; 0x1dc <read_channelADC+0x8e>
     17c:	ec e7       	ldi	r30, 0x7C	; 124
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	80 7f       	andi	r24, 0xF0	; 240
     184:	82 60       	ori	r24, 0x02	; 2
     186:	80 83       	st	Z, r24
     188:	29 c0       	rjmp	.+82     	; 0x1dc <read_channelADC+0x8e>
     18a:	ec e7       	ldi	r30, 0x7C	; 124
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 7f       	andi	r24, 0xF0	; 240
     192:	83 60       	ori	r24, 0x03	; 3
     194:	80 83       	st	Z, r24
     196:	22 c0       	rjmp	.+68     	; 0x1dc <read_channelADC+0x8e>
     198:	ec e7       	ldi	r30, 0x7C	; 124
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	80 81       	ld	r24, Z
     19e:	80 7f       	andi	r24, 0xF0	; 240
     1a0:	84 60       	ori	r24, 0x04	; 4
     1a2:	80 83       	st	Z, r24
     1a4:	1b c0       	rjmp	.+54     	; 0x1dc <read_channelADC+0x8e>
     1a6:	ec e7       	ldi	r30, 0x7C	; 124
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	80 7f       	andi	r24, 0xF0	; 240
     1ae:	85 60       	ori	r24, 0x05	; 5
     1b0:	80 83       	st	Z, r24
     1b2:	14 c0       	rjmp	.+40     	; 0x1dc <read_channelADC+0x8e>
     1b4:	ec e7       	ldi	r30, 0x7C	; 124
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 81       	ld	r24, Z
     1ba:	80 7f       	andi	r24, 0xF0	; 240
     1bc:	86 60       	ori	r24, 0x06	; 6
     1be:	80 83       	st	Z, r24
     1c0:	0d c0       	rjmp	.+26     	; 0x1dc <read_channelADC+0x8e>
     1c2:	ec e7       	ldi	r30, 0x7C	; 124
     1c4:	f0 e0       	ldi	r31, 0x00	; 0
     1c6:	80 81       	ld	r24, Z
     1c8:	80 7f       	andi	r24, 0xF0	; 240
     1ca:	87 60       	ori	r24, 0x07	; 7
     1cc:	80 83       	st	Z, r24
     1ce:	06 c0       	rjmp	.+12     	; 0x1dc <read_channelADC+0x8e>
     1d0:	ec e7       	ldi	r30, 0x7C	; 124
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	80 81       	ld	r24, Z
     1d6:	80 7f       	andi	r24, 0xF0	; 240
     1d8:	88 60       	ori	r24, 0x08	; 8
     1da:	80 83       	st	Z, r24
     1dc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     1e0:	08 95       	ret

000001e2 <convertADC>:
     1e2:	ea e7       	ldi	r30, 0x7A	; 122
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	80 81       	ld	r24, Z
     1e8:	80 64       	ori	r24, 0x40	; 64
     1ea:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ec:	8f e3       	ldi	r24, 0x3F	; 63
     1ee:	9f e1       	ldi	r25, 0x1F	; 31
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <convertADC+0xe>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <convertADC+0x14>
     1f6:	00 00       	nop
     1f8:	08 95       	ret

000001fa <I2C_Slave_Init>:
     1fa:	97 b1       	in	r25, 0x07	; 7
     1fc:	9f 7c       	andi	r25, 0xCF	; 207
     1fe:	97 b9       	out	0x07, r25	; 7
     200:	88 0f       	add	r24, r24
     202:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
     206:	85 e4       	ldi	r24, 0x45	; 69
     208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     20c:	08 95       	ret

0000020e <init_pins>:
		convertADC();
	}
}

void init_pins(){
	DDRB |= (1<<PORTB5);
     20e:	84 b1       	in	r24, 0x04	; 4
     210:	80 62       	ori	r24, 0x20	; 32
     212:	84 b9       	out	0x04, r24	; 4
	DDRD |= led1 | led2;
     214:	8a b1       	in	r24, 0x0a	; 10
     216:	8c 60       	ori	r24, 0x0C	; 12
     218:	8a b9       	out	0x0a, r24	; 10
     21a:	08 95       	ret

0000021c <main>:

	char * temp;


int main(void){
	cli();
     21c:	f8 94       	cli
	DDRC = 0;
     21e:	17 b8       	out	0x07, r1	; 7
	DDRB |= (1 << 5) | (1 << 1) | (1 << 2);
     220:	84 b1       	in	r24, 0x04	; 4
     222:	86 62       	ori	r24, 0x26	; 38
     224:	84 b9       	out	0x04, r24	; 4
	I2C_Slave_Init(address);
     226:	81 e2       	ldi	r24, 0x21	; 33
     228:	0e 94 fd 00 	call	0x1fa	; 0x1fa <I2C_Slave_Init>
	initUART9600();
     22c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <initUART9600>
	initADC();
     230:	0e 94 5c 00 	call	0xb8	; 0xb8 <initADC>
	pinADC(3);
     234:	83 e0       	ldi	r24, 0x03	; 3
     236:	0e 94 75 00 	call	0xea	; 0xea <pinADC>
	init_pins();
     23a:	0e 94 07 01 	call	0x20e	; 0x20e <init_pins>
	initFastPWM1(settedUp, 8);
     23e:	68 e0       	ldi	r22, 0x08	; 8
     240:	70 e0       	ldi	r23, 0x00	; 0
     242:	82 e0       	ldi	r24, 0x02	; 2
     244:	0e 94 14 02 	call	0x428	; 0x428 <initFastPWM1>
	channel(channelA, nop);
     248:	60 e0       	ldi	r22, 0x00	; 0
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <channel>
	topValue(39999);
     250:	8f e3       	ldi	r24, 0x3F	; 63
     252:	9c e9       	ldi	r25, 0x9C	; 156
     254:	0e 94 4b 02 	call	0x496	; 0x496 <topValue>
	initUART9600();
     258:	0e 94 51 03 	call	0x6a2	; 0x6a2 <initUART9600>
	sei();
     25c:	78 94       	sei
	while(1) {
		convertADC();
     25e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <convertADC>
     262:	fd cf       	rjmp	.-6      	; 0x25e <main+0x42>

00000264 <__vector_21>:
void init_pins(){
	DDRB |= (1<<PORTB5);
	DDRD |= led1 | led2;
}

ISR(ADC_vect){
     264:	1f 92       	push	r1
     266:	0f 92       	push	r0
     268:	0f b6       	in	r0, 0x3f	; 63
     26a:	0f 92       	push	r0
     26c:	11 24       	eor	r1, r1
     26e:	2f 93       	push	r18
     270:	3f 93       	push	r19
     272:	4f 93       	push	r20
     274:	5f 93       	push	r21
     276:	6f 93       	push	r22
     278:	7f 93       	push	r23
     27a:	8f 93       	push	r24
     27c:	9f 93       	push	r25
     27e:	af 93       	push	r26
     280:	bf 93       	push	r27
     282:	ef 93       	push	r30
     284:	ff 93       	push	r31
	ADCSRA |= (1 << ADIF);	//turn on flag
     286:	ea e7       	ldi	r30, 0x7A	; 122
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	80 81       	ld	r24, Z
     28c:	80 61       	ori	r24, 0x10	; 16
     28e:	80 83       	st	Z, r24
	fotores = read_channelADC(3);//read_changechannel(selectedadc);
     290:	83 e0       	ldi	r24, 0x03	; 3
     292:	0e 94 a7 00 	call	0x14e	; 0x14e <read_channelADC>
     296:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
	convertServo(registro, channelA);
     29a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <registro>
     29e:	61 e0       	ldi	r22, 0x01	; 1
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	0e 94 bb 02 	call	0x576	; 0x576 <convertServo>
	if(fotores >= 150) PORTB &= ~(1 << 5);							// turn off lights
     2a6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
     2aa:	86 39       	cpi	r24, 0x96	; 150
     2ac:	20 f0       	brcs	.+8      	; 0x2b6 <__vector_21+0x52>
     2ae:	85 b1       	in	r24, 0x05	; 5
     2b0:	8f 7d       	andi	r24, 0xDF	; 223
     2b2:	85 b9       	out	0x05, r24	; 5
     2b4:	03 c0       	rjmp	.+6      	; 0x2bc <__vector_21+0x58>
	else PORTB |= (1 << 5);											// turn on lights
     2b6:	85 b1       	in	r24, 0x05	; 5
     2b8:	80 62       	ori	r24, 0x20	; 32
     2ba:	85 b9       	out	0x05, r24	; 5
	sprintf(temp, "%d", fotores);
     2bc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
     2c0:	1f 92       	push	r1
     2c2:	8f 93       	push	r24
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	9f 93       	push	r25
     2ca:	8f 93       	push	r24
     2cc:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <temp+0x1>
     2d0:	8f 93       	push	r24
     2d2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <temp>
     2d6:	8f 93       	push	r24
     2d8:	0e 94 7f 05 	call	0xafe	; 0xafe <sprintf>
	writeTextUART(temp);
     2dc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <temp>
     2e0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <temp+0x1>
     2e4:	0e 94 40 03 	call	0x680	; 0x680 <writeTextUART>
}
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	0f 90       	pop	r0
     2f0:	0f 90       	pop	r0
     2f2:	0f 90       	pop	r0
     2f4:	ff 91       	pop	r31
     2f6:	ef 91       	pop	r30
     2f8:	bf 91       	pop	r27
     2fa:	af 91       	pop	r26
     2fc:	9f 91       	pop	r25
     2fe:	8f 91       	pop	r24
     300:	7f 91       	pop	r23
     302:	6f 91       	pop	r22
     304:	5f 91       	pop	r21
     306:	4f 91       	pop	r20
     308:	3f 91       	pop	r19
     30a:	2f 91       	pop	r18
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <__vector_24>:

ISR(TWI_vect){
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
     320:	8f 93       	push	r24
     322:	9f 93       	push	r25
     324:	ef 93       	push	r30
     326:	ff 93       	push	r31
	uint8_t estado;
	estado = TWSR & 0xF8;
     328:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     32c:	88 7f       	andi	r24, 0xF8	; 248
	switch(estado){
     32e:	80 38       	cpi	r24, 0x80	; 128
     330:	a1 f0       	breq	.+40     	; 0x35a <__vector_24+0x44>
     332:	28 f4       	brcc	.+10     	; 0x33e <__vector_24+0x28>
     334:	80 36       	cpi	r24, 0x60	; 96
     336:	59 f0       	breq	.+22     	; 0x34e <__vector_24+0x38>
     338:	80 37       	cpi	r24, 0x70	; 112
     33a:	49 f0       	breq	.+18     	; 0x34e <__vector_24+0x38>
     33c:	46 c0       	rjmp	.+140    	; 0x3ca <__vector_24+0xb4>
     33e:	88 3a       	cpi	r24, 0xA8	; 168
     340:	c1 f1       	breq	.+112    	; 0x3b2 <__vector_24+0x9c>
     342:	88 3b       	cpi	r24, 0xB8	; 184
     344:	b1 f1       	breq	.+108    	; 0x3b2 <__vector_24+0x9c>
     346:	80 39       	cpi	r24, 0x90	; 144
     348:	09 f0       	breq	.+2      	; 0x34c <__vector_24+0x36>
     34a:	3f c0       	rjmp	.+126    	; 0x3ca <__vector_24+0xb4>
     34c:	06 c0       	rjmp	.+12     	; 0x35a <__vector_24+0x44>
		case 0X60:
		case 0x70:
		TWCR |= (1<<TWINT);
     34e:	ec eb       	ldi	r30, 0xBC	; 188
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	80 81       	ld	r24, Z
     354:	80 68       	ori	r24, 0x80	; 128
     356:	80 83       	st	Z, r24
		break;
     358:	3d c0       	rjmp	.+122    	; 0x3d4 <__vector_24+0xbe>
		case 0x80:
		case 0x90:
		buffer = TWDR;											//Receive info
     35a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     35e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <buffer>
		TWCR |= (1<<TWINT)|(1<<TWEA);
     362:	ec eb       	ldi	r30, 0xBC	; 188
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 6c       	ori	r24, 0xC0	; 192
     36a:	80 83       	st	Z, r24
		switch(buffer){
     36c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <buffer>
     370:	82 34       	cpi	r24, 0x42	; 66
     372:	99 f0       	breq	.+38     	; 0x39a <__vector_24+0x84>
     374:	28 f4       	brcc	.+10     	; 0x380 <__vector_24+0x6a>
     376:	80 34       	cpi	r24, 0x40	; 64
     378:	41 f0       	breq	.+16     	; 0x38a <__vector_24+0x74>
     37a:	81 34       	cpi	r24, 0x41	; 65
     37c:	51 f0       	breq	.+20     	; 0x392 <__vector_24+0x7c>
     37e:	2a c0       	rjmp	.+84     	; 0x3d4 <__vector_24+0xbe>
     380:	83 34       	cpi	r24, 0x43	; 67
     382:	79 f0       	breq	.+30     	; 0x3a2 <__vector_24+0x8c>
     384:	84 34       	cpi	r24, 0x44	; 68
     386:	89 f0       	breq	.+34     	; 0x3aa <__vector_24+0x94>
     388:	25 c0       	rjmp	.+74     	; 0x3d4 <__vector_24+0xbe>
			case 0x40:
				PORTD |= (led1|led2);
     38a:	8b b1       	in	r24, 0x0b	; 11
     38c:	8c 60       	ori	r24, 0x0C	; 12
     38e:	8b b9       	out	0x0b, r24	; 11
				break;
     390:	21 c0       	rjmp	.+66     	; 0x3d4 <__vector_24+0xbe>
			case 0x41:
				PORTD &= ~(led1|led2);
     392:	8b b1       	in	r24, 0x0b	; 11
     394:	83 7f       	andi	r24, 0xF3	; 243
     396:	8b b9       	out	0x0b, r24	; 11
				break;
     398:	1d c0       	rjmp	.+58     	; 0x3d4 <__vector_24+0xbe>
			case 0x42:
				registro = 157;
     39a:	8d e9       	ldi	r24, 0x9D	; 157
     39c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <registro>
				break;
     3a0:	19 c0       	rjmp	.+50     	; 0x3d4 <__vector_24+0xbe>
			case 0x43:
				registro = 15;
     3a2:	8f e0       	ldi	r24, 0x0F	; 15
     3a4:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <registro>
				break;
     3a8:	15 c0       	rjmp	.+42     	; 0x3d4 <__vector_24+0xbe>
			case 0x44:
				registro = 70;
     3aa:	86 e4       	ldi	r24, 0x46	; 70
     3ac:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <registro>
				break;	
     3b0:	11 c0       	rjmp	.+34     	; 0x3d4 <__vector_24+0xbe>
				break;
		}
		break;
		case 0xA8:
		case 0xB8:
			TWDR = fotores;											//Send info
     3b2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
     3b6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
			TWCR = (1<<TWEN)|(1<<TWIE)|(1<<TWINT)|(1<<TWEA);
     3ba:	85 ec       	ldi	r24, 0xC5	; 197
     3bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
			PORTB ^= (1<< PORTB5);
     3c0:	95 b1       	in	r25, 0x05	; 5
     3c2:	80 e2       	ldi	r24, 0x20	; 32
     3c4:	89 27       	eor	r24, r25
     3c6:	85 b9       	out	0x05, r24	; 5
		break;
     3c8:	05 c0       	rjmp	.+10     	; 0x3d4 <__vector_24+0xbe>

		default:
		TWCR |= (1<<TWINT)|(1<<TWSTO);
     3ca:	ec eb       	ldi	r30, 0xBC	; 188
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	80 81       	ld	r24, Z
     3d0:	80 69       	ori	r24, 0x90	; 144
     3d2:	80 83       	st	Z, r24
		break;
		
	}
}
     3d4:	ff 91       	pop	r31
     3d6:	ef 91       	pop	r30
     3d8:	9f 91       	pop	r25
     3da:	8f 91       	pop	r24
     3dc:	0f 90       	pop	r0
     3de:	0f be       	out	0x3f, r0	; 63
     3e0:	0f 90       	pop	r0
     3e2:	1f 90       	pop	r1
     3e4:	18 95       	reti

000003e6 <channel>:
uint16_t topVal = 0;
uint16_t i, j;		//transition variables

//(channel <- channelA/channelB, inverted <- yes/nop)
void channel(uint8_t setChannel, uint8_t inverted){
	switch(setChannel){
     3e6:	81 30       	cpi	r24, 0x01	; 1
     3e8:	19 f0       	breq	.+6      	; 0x3f0 <channel+0xa>
     3ea:	82 30       	cpi	r24, 0x02	; 2
     3ec:	79 f0       	breq	.+30     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     3ee:	08 95       	ret
		case 1:
			if(inverted == 1){
     3f0:	61 30       	cpi	r22, 0x01	; 1
     3f2:	31 f4       	brne	.+12     	; 0x400 <__EEPROM_REGION_LENGTH__>
				TCCR1A |= (1 << COM1A0) | (1 << COM1A1);	//channel A inverted
     3f4:	e0 e8       	ldi	r30, 0x80	; 128
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	80 81       	ld	r24, Z
     3fa:	80 6c       	ori	r24, 0xC0	; 192
     3fc:	80 83       	st	Z, r24
     3fe:	08 95       	ret
			}else{
				TCCR1A |= (1 << COM1A1);					//channel A no inverted
     400:	e0 e8       	ldi	r30, 0x80	; 128
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	80 81       	ld	r24, Z
     406:	80 68       	ori	r24, 0x80	; 128
     408:	80 83       	st	Z, r24
     40a:	08 95       	ret
			}
		break;
		
		case 2:
			if(inverted == 1){
     40c:	61 30       	cpi	r22, 0x01	; 1
     40e:	31 f4       	brne	.+12     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
				TCCR1A |= (1 << COM1B0) | (1 << COM1B1);	//channelB inverted
     410:	e0 e8       	ldi	r30, 0x80	; 128
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	80 81       	ld	r24, Z
     416:	80 63       	ori	r24, 0x30	; 48
     418:	80 83       	st	Z, r24
     41a:	08 95       	ret
			}else{
				TCCR1A |= (1 << COM1B1);					//channelB no inverted
     41c:	e0 e8       	ldi	r30, 0x80	; 128
     41e:	f0 e0       	ldi	r31, 0x00	; 0
     420:	80 81       	ld	r24, Z
     422:	80 62       	ori	r24, 0x20	; 32
     424:	80 83       	st	Z, r24
     426:	08 95       	ret

00000428 <initFastPWM1>:
/*Settings for Fast PWM 1, 16 bits, use it just one time
(inverted <- yes/nop, modePWM <- normal/settedUp, prescaler <- 1,8,64,256,1024)
*/
void initFastPWM1(uint8_t modePWM, uint16_t prescaler){
	//initialize register timer1
	TCCR1A = 0;
     428:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0;
     42c:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	
	switch (prescaler)
     430:	68 30       	cpi	r22, 0x08	; 8
     432:	71 05       	cpc	r23, r1
     434:	21 f0       	breq	.+8      	; 0x43e <initFastPWM1+0x16>
     436:	61 15       	cp	r22, r1
     438:	74 40       	sbci	r23, 0x04	; 4
     43a:	39 f0       	breq	.+14     	; 0x44a <initFastPWM1+0x22>
     43c:	0b c0       	rjmp	.+22     	; 0x454 <initFastPWM1+0x2c>
	{
		case 8:
			TCCR1B |= (1 << CS11);					//prescaler 8
     43e:	e1 e8       	ldi	r30, 0x81	; 129
     440:	f0 e0       	ldi	r31, 0x00	; 0
     442:	90 81       	ld	r25, Z
     444:	92 60       	ori	r25, 0x02	; 2
     446:	90 83       	st	Z, r25
		break;
     448:	05 c0       	rjmp	.+10     	; 0x454 <initFastPWM1+0x2c>
		
		case 1024:
			TCCR1B |= (1 << CS10) | (1 << CS12);	//prescaler 1024
     44a:	e1 e8       	ldi	r30, 0x81	; 129
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	90 81       	ld	r25, Z
     450:	95 60       	ori	r25, 0x05	; 5
     452:	90 83       	st	Z, r25
		break;
	}
	
	//selecting mode of operation
	switch (modePWM)
     454:	81 30       	cpi	r24, 0x01	; 1
     456:	19 f0       	breq	.+6      	; 0x45e <initFastPWM1+0x36>
     458:	82 30       	cpi	r24, 0x02	; 2
     45a:	61 f0       	breq	.+24     	; 0x474 <initFastPWM1+0x4c>
     45c:	08 95       	ret
	{
		case normal:
			//fast PWM 10-bit resolution
			TCCR1A |= (1 << WGM11) | (1 << WGM10);
     45e:	e0 e8       	ldi	r30, 0x80	; 128
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	83 60       	ori	r24, 0x03	; 3
     466:	80 83       	st	Z, r24
			TCCR1B |= (1 << WGM12);
     468:	e1 e8       	ldi	r30, 0x81	; 129
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	80 81       	ld	r24, Z
     46e:	88 60       	ori	r24, 0x08	; 8
     470:	80 83       	st	Z, r24
		break;
     472:	08 95       	ret
		
		case settedUp:
			//fast PWM with ICR1 as TOP
			TCCR1A |= (1 << WGM11);
     474:	e0 e8       	ldi	r30, 0x80	; 128
     476:	f0 e0       	ldi	r31, 0x00	; 0
     478:	80 81       	ld	r24, Z
     47a:	82 60       	ori	r24, 0x02	; 2
     47c:	80 83       	st	Z, r24
			TCCR1B |= (1 << WGM12) | (1 << WGM13);
     47e:	e1 e8       	ldi	r30, 0x81	; 129
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	88 61       	ori	r24, 0x18	; 24
     486:	80 83       	st	Z, r24
			topVal = 1;		//set if it's required a top value
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <topVal+0x1>
     490:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <topVal>
     494:	08 95       	ret

00000496 <topValue>:
	
}

//topValue, used if mode is settedUp
void topValue(uint16_t top){
	if (topVal == 1)	{
     496:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <topVal>
     49a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <topVal+0x1>
     49e:	21 30       	cpi	r18, 0x01	; 1
     4a0:	31 05       	cpc	r19, r1
     4a2:	29 f4       	brne	.+10     	; 0x4ae <topValue+0x18>
		ICR1 = top;		//set top value
     4a4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     4a8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     4ac:	08 95       	ret
	}else{
		topVal = 0;
     4ae:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <topVal+0x1>
     4b2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <topVal>
     4b6:	08 95       	ret

000004b8 <maping>:
			OCR1B = maping(analogIn,0,255,1000,2000);
		break;
	}
}

float maping(float x, float in_min, float in_max, float out_min, float out_max){
     4b8:	4f 92       	push	r4
     4ba:	5f 92       	push	r5
     4bc:	6f 92       	push	r6
     4be:	7f 92       	push	r7
     4c0:	af 92       	push	r10
     4c2:	bf 92       	push	r11
     4c4:	cf 92       	push	r12
     4c6:	df 92       	push	r13
     4c8:	ef 92       	push	r14
     4ca:	ff 92       	push	r15
     4cc:	0f 93       	push	r16
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
     4d8:	28 97       	sbiw	r28, 0x08	; 8
     4da:	0f b6       	in	r0, 0x3f	; 63
     4dc:	f8 94       	cli
     4de:	de bf       	out	0x3e, r29	; 62
     4e0:	0f be       	out	0x3f, r0	; 63
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	29 01       	movw	r4, r18
     4e6:	3a 01       	movw	r6, r20
     4e8:	ed 82       	std	Y+5, r14	; 0x05
     4ea:	fe 82       	std	Y+6, r15	; 0x06
     4ec:	0f 83       	std	Y+7, r16	; 0x07
     4ee:	18 87       	std	Y+8, r17	; 0x08
	return ((x - in_min)*(out_max - out_min)/(in_max - in_min)) + out_min;
     4f0:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__subsf3>
     4f4:	69 83       	std	Y+1, r22	; 0x01
     4f6:	7a 83       	std	Y+2, r23	; 0x02
     4f8:	8b 83       	std	Y+3, r24	; 0x03
     4fa:	9c 83       	std	Y+4, r25	; 0x04
     4fc:	a6 01       	movw	r20, r12
     4fe:	95 01       	movw	r18, r10
     500:	69 8d       	ldd	r22, Y+25	; 0x19
     502:	7a 8d       	ldd	r23, Y+26	; 0x1a
     504:	8b 8d       	ldd	r24, Y+27	; 0x1b
     506:	9c 8d       	ldd	r25, Y+28	; 0x1c
     508:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__subsf3>
     50c:	9b 01       	movw	r18, r22
     50e:	ac 01       	movw	r20, r24
     510:	69 81       	ldd	r22, Y+1	; 0x01
     512:	7a 81       	ldd	r23, Y+2	; 0x02
     514:	8b 81       	ldd	r24, Y+3	; 0x03
     516:	9c 81       	ldd	r25, Y+4	; 0x04
     518:	0e 94 0c 05 	call	0xa18	; 0xa18 <__mulsf3>
     51c:	69 83       	std	Y+1, r22	; 0x01
     51e:	7a 83       	std	Y+2, r23	; 0x02
     520:	8b 83       	std	Y+3, r24	; 0x03
     522:	9c 83       	std	Y+4, r25	; 0x04
     524:	a3 01       	movw	r20, r6
     526:	92 01       	movw	r18, r4
     528:	c8 01       	movw	r24, r16
     52a:	b7 01       	movw	r22, r14
     52c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__subsf3>
     530:	9b 01       	movw	r18, r22
     532:	ac 01       	movw	r20, r24
     534:	69 81       	ldd	r22, Y+1	; 0x01
     536:	7a 81       	ldd	r23, Y+2	; 0x02
     538:	8b 81       	ldd	r24, Y+3	; 0x03
     53a:	9c 81       	ldd	r25, Y+4	; 0x04
     53c:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__divsf3>
     540:	9b 01       	movw	r18, r22
     542:	ac 01       	movw	r20, r24
     544:	c6 01       	movw	r24, r12
     546:	b5 01       	movw	r22, r10
     548:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__addsf3>
}
     54c:	28 96       	adiw	r28, 0x08	; 8
     54e:	0f b6       	in	r0, 0x3f	; 63
     550:	f8 94       	cli
     552:	de bf       	out	0x3e, r29	; 62
     554:	0f be       	out	0x3f, r0	; 63
     556:	cd bf       	out	0x3d, r28	; 61
     558:	df 91       	pop	r29
     55a:	cf 91       	pop	r28
     55c:	1f 91       	pop	r17
     55e:	0f 91       	pop	r16
     560:	ff 90       	pop	r15
     562:	ef 90       	pop	r14
     564:	df 90       	pop	r13
     566:	cf 90       	pop	r12
     568:	bf 90       	pop	r11
     56a:	af 90       	pop	r10
     56c:	7f 90       	pop	r7
     56e:	6f 90       	pop	r6
     570:	5f 90       	pop	r5
     572:	4f 90       	pop	r4
     574:	08 95       	ret

00000576 <convertServo>:
		topVal = 0;
	}
}

//conversion for servos, mapping values
void convertServo(uint16_t analogIn, uint8_t selChannel){
     576:	af 92       	push	r10
     578:	bf 92       	push	r11
     57a:	cf 92       	push	r12
     57c:	df 92       	push	r13
     57e:	ef 92       	push	r14
     580:	ff 92       	push	r15
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
	switch(selChannel){
     586:	61 30       	cpi	r22, 0x01	; 1
     588:	19 f0       	breq	.+6      	; 0x590 <convertServo+0x1a>
     58a:	62 30       	cpi	r22, 0x02	; 2
     58c:	c9 f1       	breq	.+114    	; 0x600 <convertServo+0x8a>
     58e:	6f c0       	rjmp	.+222    	; 0x66e <convertServo+0xf8>
		case 1:
			i = analogIn;
     590:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <i+0x1>
     594:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <i>
			j = (200/12)*i+1000;
     598:	9c 01       	movw	r18, r24
     59a:	22 95       	swap	r18
     59c:	32 95       	swap	r19
     59e:	30 7f       	andi	r19, 0xF0	; 240
     5a0:	32 27       	eor	r19, r18
     5a2:	20 7f       	andi	r18, 0xF0	; 240
     5a4:	32 27       	eor	r19, r18
     5a6:	28 51       	subi	r18, 0x18	; 24
     5a8:	3c 4f       	sbci	r19, 0xFC	; 252
     5aa:	30 93 0c 01 	sts	0x010C, r19	; 0x80010c <j+0x1>
     5ae:	20 93 0b 01 	sts	0x010B, r18	; 0x80010b <j>
			OCR1A = maping(analogIn,0,255,1000,2000);
     5b2:	bc 01       	movw	r22, r24
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__floatunsisf>
     5bc:	24 e4       	ldi	r18, 0x44	; 68
     5be:	2f 93       	push	r18
     5c0:	2a ef       	ldi	r18, 0xFA	; 250
     5c2:	2f 93       	push	r18
     5c4:	1f 92       	push	r1
     5c6:	1f 92       	push	r1
     5c8:	0f 2e       	mov	r0, r31
     5ca:	a1 2c       	mov	r10, r1
     5cc:	b1 2c       	mov	r11, r1
     5ce:	fa e7       	ldi	r31, 0x7A	; 122
     5d0:	cf 2e       	mov	r12, r31
     5d2:	f4 e4       	ldi	r31, 0x44	; 68
     5d4:	df 2e       	mov	r13, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	e1 2c       	mov	r14, r1
     5da:	f1 2c       	mov	r15, r1
     5dc:	0f e7       	ldi	r16, 0x7F	; 127
     5de:	13 e4       	ldi	r17, 0x43	; 67
     5e0:	20 e0       	ldi	r18, 0x00	; 0
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	a9 01       	movw	r20, r18
     5e6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <maping>
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0e 94 4f 04 	call	0x89e	; 0x89e <__fixunssfsi>
     5f6:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     5fa:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		break;
     5fe:	37 c0       	rjmp	.+110    	; 0x66e <convertServo+0xf8>
		
		case 2:
			i = analogIn;
     600:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <i+0x1>
     604:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <i>
			j = (200/12)*i+1000;
     608:	9c 01       	movw	r18, r24
     60a:	22 95       	swap	r18
     60c:	32 95       	swap	r19
     60e:	30 7f       	andi	r19, 0xF0	; 240
     610:	32 27       	eor	r19, r18
     612:	20 7f       	andi	r18, 0xF0	; 240
     614:	32 27       	eor	r19, r18
     616:	28 51       	subi	r18, 0x18	; 24
     618:	3c 4f       	sbci	r19, 0xFC	; 252
     61a:	30 93 0c 01 	sts	0x010C, r19	; 0x80010c <j+0x1>
     61e:	20 93 0b 01 	sts	0x010B, r18	; 0x80010b <j>
			OCR1B = maping(analogIn,0,255,1000,2000);
     622:	bc 01       	movw	r22, r24
     624:	80 e0       	ldi	r24, 0x00	; 0
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__floatunsisf>
     62c:	24 e4       	ldi	r18, 0x44	; 68
     62e:	2f 93       	push	r18
     630:	2a ef       	ldi	r18, 0xFA	; 250
     632:	2f 93       	push	r18
     634:	1f 92       	push	r1
     636:	1f 92       	push	r1
     638:	0f 2e       	mov	r0, r31
     63a:	a1 2c       	mov	r10, r1
     63c:	b1 2c       	mov	r11, r1
     63e:	fa e7       	ldi	r31, 0x7A	; 122
     640:	cf 2e       	mov	r12, r31
     642:	f4 e4       	ldi	r31, 0x44	; 68
     644:	df 2e       	mov	r13, r31
     646:	f0 2d       	mov	r31, r0
     648:	e1 2c       	mov	r14, r1
     64a:	f1 2c       	mov	r15, r1
     64c:	0f e7       	ldi	r16, 0x7F	; 127
     64e:	13 e4       	ldi	r17, 0x43	; 67
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	a9 01       	movw	r20, r18
     656:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <maping>
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0e 94 4f 04 	call	0x89e	; 0x89e <__fixunssfsi>
     666:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     66a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
		break;
	}
}
     66e:	1f 91       	pop	r17
     670:	0f 91       	pop	r16
     672:	ff 90       	pop	r15
     674:	ef 90       	pop	r14
     676:	df 90       	pop	r13
     678:	cf 90       	pop	r12
     67a:	bf 90       	pop	r11
     67c:	af 90       	pop	r10
     67e:	08 95       	ret

00000680 <writeTextUART>:
     680:	ac 01       	movw	r20, r24
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	07 c0       	rjmp	.+14     	; 0x694 <writeTextUART+0x14>
     686:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     68a:	95 ff       	sbrs	r25, 5
     68c:	fc cf       	rjmp	.-8      	; 0x686 <writeTextUART+0x6>
     68e:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     692:	2f 5f       	subi	r18, 0xFF	; 255
     694:	fa 01       	movw	r30, r20
     696:	e2 0f       	add	r30, r18
     698:	f1 1d       	adc	r31, r1
     69a:	30 81       	ld	r19, Z
     69c:	31 11       	cpse	r19, r1
     69e:	f3 cf       	rjmp	.-26     	; 0x686 <writeTextUART+0x6>
     6a0:	08 95       	ret

000006a2 <initUART9600>:
     6a2:	8a b1       	in	r24, 0x0a	; 10
     6a4:	8e 7f       	andi	r24, 0xFE	; 254
     6a6:	8a b9       	out	0x0a, r24	; 10
     6a8:	8a b1       	in	r24, 0x0a	; 10
     6aa:	82 60       	ori	r24, 0x02	; 2
     6ac:	8a b9       	out	0x0a, r24	; 10
     6ae:	e0 ec       	ldi	r30, 0xC0	; 192
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	10 82       	st	Z, r1
     6b4:	80 81       	ld	r24, Z
     6b6:	82 60       	ori	r24, 0x02	; 2
     6b8:	80 83       	st	Z, r24
     6ba:	e1 ec       	ldi	r30, 0xC1	; 193
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	10 82       	st	Z, r1
     6c0:	80 81       	ld	r24, Z
     6c2:	88 69       	ori	r24, 0x98	; 152
     6c4:	80 83       	st	Z, r24
     6c6:	e2 ec       	ldi	r30, 0xC2	; 194
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	10 82       	st	Z, r1
     6cc:	80 81       	ld	r24, Z
     6ce:	86 60       	ori	r24, 0x06	; 6
     6d0:	80 83       	st	Z, r24
     6d2:	8f ec       	ldi	r24, 0xCF	; 207
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     6da:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     6de:	08 95       	ret

000006e0 <__subsf3>:
     6e0:	50 58       	subi	r21, 0x80	; 128

000006e2 <__addsf3>:
     6e2:	bb 27       	eor	r27, r27
     6e4:	aa 27       	eor	r26, r26
     6e6:	0e 94 88 03 	call	0x710	; 0x710 <__addsf3x>
     6ea:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_round>
     6ee:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscA>
     6f2:	38 f0       	brcs	.+14     	; 0x702 <__addsf3+0x20>
     6f4:	0e 94 cb 04 	call	0x996	; 0x996 <__fp_pscB>
     6f8:	20 f0       	brcs	.+8      	; 0x702 <__addsf3+0x20>
     6fa:	39 f4       	brne	.+14     	; 0x70a <__addsf3+0x28>
     6fc:	9f 3f       	cpi	r25, 0xFF	; 255
     6fe:	19 f4       	brne	.+6      	; 0x706 <__addsf3+0x24>
     700:	26 f4       	brtc	.+8      	; 0x70a <__addsf3+0x28>
     702:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_nan>
     706:	0e f4       	brtc	.+2      	; 0x70a <__addsf3+0x28>
     708:	e0 95       	com	r30
     70a:	e7 fb       	bst	r30, 7
     70c:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_inf>

00000710 <__addsf3x>:
     710:	e9 2f       	mov	r30, r25
     712:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fp_split3>
     716:	58 f3       	brcs	.-42     	; 0x6ee <__addsf3+0xc>
     718:	ba 17       	cp	r27, r26
     71a:	62 07       	cpc	r22, r18
     71c:	73 07       	cpc	r23, r19
     71e:	84 07       	cpc	r24, r20
     720:	95 07       	cpc	r25, r21
     722:	20 f0       	brcs	.+8      	; 0x72c <__addsf3x+0x1c>
     724:	79 f4       	brne	.+30     	; 0x744 <__addsf3x+0x34>
     726:	a6 f5       	brtc	.+104    	; 0x790 <__addsf3x+0x80>
     728:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <__fp_zero>
     72c:	0e f4       	brtc	.+2      	; 0x730 <__addsf3x+0x20>
     72e:	e0 95       	com	r30
     730:	0b 2e       	mov	r0, r27
     732:	ba 2f       	mov	r27, r26
     734:	a0 2d       	mov	r26, r0
     736:	0b 01       	movw	r0, r22
     738:	b9 01       	movw	r22, r18
     73a:	90 01       	movw	r18, r0
     73c:	0c 01       	movw	r0, r24
     73e:	ca 01       	movw	r24, r20
     740:	a0 01       	movw	r20, r0
     742:	11 24       	eor	r1, r1
     744:	ff 27       	eor	r31, r31
     746:	59 1b       	sub	r21, r25
     748:	99 f0       	breq	.+38     	; 0x770 <__addsf3x+0x60>
     74a:	59 3f       	cpi	r21, 0xF9	; 249
     74c:	50 f4       	brcc	.+20     	; 0x762 <__addsf3x+0x52>
     74e:	50 3e       	cpi	r21, 0xE0	; 224
     750:	68 f1       	brcs	.+90     	; 0x7ac <__addsf3x+0x9c>
     752:	1a 16       	cp	r1, r26
     754:	f0 40       	sbci	r31, 0x00	; 0
     756:	a2 2f       	mov	r26, r18
     758:	23 2f       	mov	r18, r19
     75a:	34 2f       	mov	r19, r20
     75c:	44 27       	eor	r20, r20
     75e:	58 5f       	subi	r21, 0xF8	; 248
     760:	f3 cf       	rjmp	.-26     	; 0x748 <__addsf3x+0x38>
     762:	46 95       	lsr	r20
     764:	37 95       	ror	r19
     766:	27 95       	ror	r18
     768:	a7 95       	ror	r26
     76a:	f0 40       	sbci	r31, 0x00	; 0
     76c:	53 95       	inc	r21
     76e:	c9 f7       	brne	.-14     	; 0x762 <__addsf3x+0x52>
     770:	7e f4       	brtc	.+30     	; 0x790 <__addsf3x+0x80>
     772:	1f 16       	cp	r1, r31
     774:	ba 0b       	sbc	r27, r26
     776:	62 0b       	sbc	r22, r18
     778:	73 0b       	sbc	r23, r19
     77a:	84 0b       	sbc	r24, r20
     77c:	ba f0       	brmi	.+46     	; 0x7ac <__addsf3x+0x9c>
     77e:	91 50       	subi	r25, 0x01	; 1
     780:	a1 f0       	breq	.+40     	; 0x7aa <__addsf3x+0x9a>
     782:	ff 0f       	add	r31, r31
     784:	bb 1f       	adc	r27, r27
     786:	66 1f       	adc	r22, r22
     788:	77 1f       	adc	r23, r23
     78a:	88 1f       	adc	r24, r24
     78c:	c2 f7       	brpl	.-16     	; 0x77e <__addsf3x+0x6e>
     78e:	0e c0       	rjmp	.+28     	; 0x7ac <__addsf3x+0x9c>
     790:	ba 0f       	add	r27, r26
     792:	62 1f       	adc	r22, r18
     794:	73 1f       	adc	r23, r19
     796:	84 1f       	adc	r24, r20
     798:	48 f4       	brcc	.+18     	; 0x7ac <__addsf3x+0x9c>
     79a:	87 95       	ror	r24
     79c:	77 95       	ror	r23
     79e:	67 95       	ror	r22
     7a0:	b7 95       	ror	r27
     7a2:	f7 95       	ror	r31
     7a4:	9e 3f       	cpi	r25, 0xFE	; 254
     7a6:	08 f0       	brcs	.+2      	; 0x7aa <__addsf3x+0x9a>
     7a8:	b0 cf       	rjmp	.-160    	; 0x70a <__addsf3+0x28>
     7aa:	93 95       	inc	r25
     7ac:	88 0f       	add	r24, r24
     7ae:	08 f0       	brcs	.+2      	; 0x7b2 <__addsf3x+0xa2>
     7b0:	99 27       	eor	r25, r25
     7b2:	ee 0f       	add	r30, r30
     7b4:	97 95       	ror	r25
     7b6:	87 95       	ror	r24
     7b8:	08 95       	ret

000007ba <__divsf3>:
     7ba:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__divsf3x>
     7be:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_round>
     7c2:	0e 94 cb 04 	call	0x996	; 0x996 <__fp_pscB>
     7c6:	58 f0       	brcs	.+22     	; 0x7de <__divsf3+0x24>
     7c8:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscA>
     7cc:	40 f0       	brcs	.+16     	; 0x7de <__divsf3+0x24>
     7ce:	29 f4       	brne	.+10     	; 0x7da <__divsf3+0x20>
     7d0:	5f 3f       	cpi	r21, 0xFF	; 255
     7d2:	29 f0       	breq	.+10     	; 0x7de <__divsf3+0x24>
     7d4:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_inf>
     7d8:	51 11       	cpse	r21, r1
     7da:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__fp_szero>
     7de:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_nan>

000007e2 <__divsf3x>:
     7e2:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fp_split3>
     7e6:	68 f3       	brcs	.-38     	; 0x7c2 <__divsf3+0x8>

000007e8 <__divsf3_pse>:
     7e8:	99 23       	and	r25, r25
     7ea:	b1 f3       	breq	.-20     	; 0x7d8 <__divsf3+0x1e>
     7ec:	55 23       	and	r21, r21
     7ee:	91 f3       	breq	.-28     	; 0x7d4 <__divsf3+0x1a>
     7f0:	95 1b       	sub	r25, r21
     7f2:	55 0b       	sbc	r21, r21
     7f4:	bb 27       	eor	r27, r27
     7f6:	aa 27       	eor	r26, r26
     7f8:	62 17       	cp	r22, r18
     7fa:	73 07       	cpc	r23, r19
     7fc:	84 07       	cpc	r24, r20
     7fe:	38 f0       	brcs	.+14     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     800:	9f 5f       	subi	r25, 0xFF	; 255
     802:	5f 4f       	sbci	r21, 0xFF	; 255
     804:	22 0f       	add	r18, r18
     806:	33 1f       	adc	r19, r19
     808:	44 1f       	adc	r20, r20
     80a:	aa 1f       	adc	r26, r26
     80c:	a9 f3       	breq	.-22     	; 0x7f8 <__divsf3_pse+0x10>
     80e:	35 d0       	rcall	.+106    	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
     810:	0e 2e       	mov	r0, r30
     812:	3a f0       	brmi	.+14     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     814:	e0 e8       	ldi	r30, 0x80	; 128
     816:	32 d0       	rcall	.+100    	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
     818:	91 50       	subi	r25, 0x01	; 1
     81a:	50 40       	sbci	r21, 0x00	; 0
     81c:	e6 95       	lsr	r30
     81e:	00 1c       	adc	r0, r0
     820:	ca f7       	brpl	.-14     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     822:	2b d0       	rcall	.+86     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
     824:	fe 2f       	mov	r31, r30
     826:	29 d0       	rcall	.+82     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
     828:	66 0f       	add	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	88 1f       	adc	r24, r24
     82e:	bb 1f       	adc	r27, r27
     830:	26 17       	cp	r18, r22
     832:	37 07       	cpc	r19, r23
     834:	48 07       	cpc	r20, r24
     836:	ab 07       	cpc	r26, r27
     838:	b0 e8       	ldi	r27, 0x80	; 128
     83a:	09 f0       	breq	.+2      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     83c:	bb 0b       	sbc	r27, r27
     83e:	80 2d       	mov	r24, r0
     840:	bf 01       	movw	r22, r30
     842:	ff 27       	eor	r31, r31
     844:	93 58       	subi	r25, 0x83	; 131
     846:	5f 4f       	sbci	r21, 0xFF	; 255
     848:	3a f0       	brmi	.+14     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
     84a:	9e 3f       	cpi	r25, 0xFE	; 254
     84c:	51 05       	cpc	r21, r1
     84e:	78 f0       	brcs	.+30     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
     850:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_inf>
     854:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__fp_szero>
     858:	5f 3f       	cpi	r21, 0xFF	; 255
     85a:	e4 f3       	brlt	.-8      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     85c:	98 3e       	cpi	r25, 0xE8	; 232
     85e:	d4 f3       	brlt	.-12     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     860:	86 95       	lsr	r24
     862:	77 95       	ror	r23
     864:	67 95       	ror	r22
     866:	b7 95       	ror	r27
     868:	f7 95       	ror	r31
     86a:	9f 5f       	subi	r25, 0xFF	; 255
     86c:	c9 f7       	brne	.-14     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
     86e:	88 0f       	add	r24, r24
     870:	91 1d       	adc	r25, r1
     872:	96 95       	lsr	r25
     874:	87 95       	ror	r24
     876:	97 f9       	bld	r25, 7
     878:	08 95       	ret
     87a:	e1 e0       	ldi	r30, 0x01	; 1
     87c:	66 0f       	add	r22, r22
     87e:	77 1f       	adc	r23, r23
     880:	88 1f       	adc	r24, r24
     882:	bb 1f       	adc	r27, r27
     884:	62 17       	cp	r22, r18
     886:	73 07       	cpc	r23, r19
     888:	84 07       	cpc	r24, r20
     88a:	ba 07       	cpc	r27, r26
     88c:	20 f0       	brcs	.+8      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
     88e:	62 1b       	sub	r22, r18
     890:	73 0b       	sbc	r23, r19
     892:	84 0b       	sbc	r24, r20
     894:	ba 0b       	sbc	r27, r26
     896:	ee 1f       	adc	r30, r30
     898:	88 f7       	brcc	.-30     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
     89a:	e0 95       	com	r30
     89c:	08 95       	ret

0000089e <__fixunssfsi>:
     89e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__fp_splitA>
     8a2:	88 f0       	brcs	.+34     	; 0x8c6 <__fixunssfsi+0x28>
     8a4:	9f 57       	subi	r25, 0x7F	; 127
     8a6:	98 f0       	brcs	.+38     	; 0x8ce <__fixunssfsi+0x30>
     8a8:	b9 2f       	mov	r27, r25
     8aa:	99 27       	eor	r25, r25
     8ac:	b7 51       	subi	r27, 0x17	; 23
     8ae:	b0 f0       	brcs	.+44     	; 0x8dc <__fixunssfsi+0x3e>
     8b0:	e1 f0       	breq	.+56     	; 0x8ea <__fixunssfsi+0x4c>
     8b2:	66 0f       	add	r22, r22
     8b4:	77 1f       	adc	r23, r23
     8b6:	88 1f       	adc	r24, r24
     8b8:	99 1f       	adc	r25, r25
     8ba:	1a f0       	brmi	.+6      	; 0x8c2 <__fixunssfsi+0x24>
     8bc:	ba 95       	dec	r27
     8be:	c9 f7       	brne	.-14     	; 0x8b2 <__fixunssfsi+0x14>
     8c0:	14 c0       	rjmp	.+40     	; 0x8ea <__fixunssfsi+0x4c>
     8c2:	b1 30       	cpi	r27, 0x01	; 1
     8c4:	91 f0       	breq	.+36     	; 0x8ea <__fixunssfsi+0x4c>
     8c6:	0e 94 05 05 	call	0xa0a	; 0xa0a <__fp_zero>
     8ca:	b1 e0       	ldi	r27, 0x01	; 1
     8cc:	08 95       	ret
     8ce:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <__fp_zero>
     8d2:	67 2f       	mov	r22, r23
     8d4:	78 2f       	mov	r23, r24
     8d6:	88 27       	eor	r24, r24
     8d8:	b8 5f       	subi	r27, 0xF8	; 248
     8da:	39 f0       	breq	.+14     	; 0x8ea <__fixunssfsi+0x4c>
     8dc:	b9 3f       	cpi	r27, 0xF9	; 249
     8de:	cc f3       	brlt	.-14     	; 0x8d2 <__fixunssfsi+0x34>
     8e0:	86 95       	lsr	r24
     8e2:	77 95       	ror	r23
     8e4:	67 95       	ror	r22
     8e6:	b3 95       	inc	r27
     8e8:	d9 f7       	brne	.-10     	; 0x8e0 <__fixunssfsi+0x42>
     8ea:	3e f4       	brtc	.+14     	; 0x8fa <__fixunssfsi+0x5c>
     8ec:	90 95       	com	r25
     8ee:	80 95       	com	r24
     8f0:	70 95       	com	r23
     8f2:	61 95       	neg	r22
     8f4:	7f 4f       	sbci	r23, 0xFF	; 255
     8f6:	8f 4f       	sbci	r24, 0xFF	; 255
     8f8:	9f 4f       	sbci	r25, 0xFF	; 255
     8fa:	08 95       	ret

000008fc <__floatunsisf>:
     8fc:	e8 94       	clt
     8fe:	09 c0       	rjmp	.+18     	; 0x912 <__floatsisf+0x12>

00000900 <__floatsisf>:
     900:	97 fb       	bst	r25, 7
     902:	3e f4       	brtc	.+14     	; 0x912 <__floatsisf+0x12>
     904:	90 95       	com	r25
     906:	80 95       	com	r24
     908:	70 95       	com	r23
     90a:	61 95       	neg	r22
     90c:	7f 4f       	sbci	r23, 0xFF	; 255
     90e:	8f 4f       	sbci	r24, 0xFF	; 255
     910:	9f 4f       	sbci	r25, 0xFF	; 255
     912:	99 23       	and	r25, r25
     914:	a9 f0       	breq	.+42     	; 0x940 <__floatsisf+0x40>
     916:	f9 2f       	mov	r31, r25
     918:	96 e9       	ldi	r25, 0x96	; 150
     91a:	bb 27       	eor	r27, r27
     91c:	93 95       	inc	r25
     91e:	f6 95       	lsr	r31
     920:	87 95       	ror	r24
     922:	77 95       	ror	r23
     924:	67 95       	ror	r22
     926:	b7 95       	ror	r27
     928:	f1 11       	cpse	r31, r1
     92a:	f8 cf       	rjmp	.-16     	; 0x91c <__floatsisf+0x1c>
     92c:	fa f4       	brpl	.+62     	; 0x96c <__floatsisf+0x6c>
     92e:	bb 0f       	add	r27, r27
     930:	11 f4       	brne	.+4      	; 0x936 <__floatsisf+0x36>
     932:	60 ff       	sbrs	r22, 0
     934:	1b c0       	rjmp	.+54     	; 0x96c <__floatsisf+0x6c>
     936:	6f 5f       	subi	r22, 0xFF	; 255
     938:	7f 4f       	sbci	r23, 0xFF	; 255
     93a:	8f 4f       	sbci	r24, 0xFF	; 255
     93c:	9f 4f       	sbci	r25, 0xFF	; 255
     93e:	16 c0       	rjmp	.+44     	; 0x96c <__floatsisf+0x6c>
     940:	88 23       	and	r24, r24
     942:	11 f0       	breq	.+4      	; 0x948 <__floatsisf+0x48>
     944:	96 e9       	ldi	r25, 0x96	; 150
     946:	11 c0       	rjmp	.+34     	; 0x96a <__floatsisf+0x6a>
     948:	77 23       	and	r23, r23
     94a:	21 f0       	breq	.+8      	; 0x954 <__floatsisf+0x54>
     94c:	9e e8       	ldi	r25, 0x8E	; 142
     94e:	87 2f       	mov	r24, r23
     950:	76 2f       	mov	r23, r22
     952:	05 c0       	rjmp	.+10     	; 0x95e <__floatsisf+0x5e>
     954:	66 23       	and	r22, r22
     956:	71 f0       	breq	.+28     	; 0x974 <__floatsisf+0x74>
     958:	96 e8       	ldi	r25, 0x86	; 134
     95a:	86 2f       	mov	r24, r22
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	2a f0       	brmi	.+10     	; 0x96c <__floatsisf+0x6c>
     962:	9a 95       	dec	r25
     964:	66 0f       	add	r22, r22
     966:	77 1f       	adc	r23, r23
     968:	88 1f       	adc	r24, r24
     96a:	da f7       	brpl	.-10     	; 0x962 <__floatsisf+0x62>
     96c:	88 0f       	add	r24, r24
     96e:	96 95       	lsr	r25
     970:	87 95       	ror	r24
     972:	97 f9       	bld	r25, 7
     974:	08 95       	ret

00000976 <__fp_inf>:
     976:	97 f9       	bld	r25, 7
     978:	9f 67       	ori	r25, 0x7F	; 127
     97a:	80 e8       	ldi	r24, 0x80	; 128
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	08 95       	ret

00000982 <__fp_nan>:
     982:	9f ef       	ldi	r25, 0xFF	; 255
     984:	80 ec       	ldi	r24, 0xC0	; 192
     986:	08 95       	ret

00000988 <__fp_pscA>:
     988:	00 24       	eor	r0, r0
     98a:	0a 94       	dec	r0
     98c:	16 16       	cp	r1, r22
     98e:	17 06       	cpc	r1, r23
     990:	18 06       	cpc	r1, r24
     992:	09 06       	cpc	r0, r25
     994:	08 95       	ret

00000996 <__fp_pscB>:
     996:	00 24       	eor	r0, r0
     998:	0a 94       	dec	r0
     99a:	12 16       	cp	r1, r18
     99c:	13 06       	cpc	r1, r19
     99e:	14 06       	cpc	r1, r20
     9a0:	05 06       	cpc	r0, r21
     9a2:	08 95       	ret

000009a4 <__fp_round>:
     9a4:	09 2e       	mov	r0, r25
     9a6:	03 94       	inc	r0
     9a8:	00 0c       	add	r0, r0
     9aa:	11 f4       	brne	.+4      	; 0x9b0 <__fp_round+0xc>
     9ac:	88 23       	and	r24, r24
     9ae:	52 f0       	brmi	.+20     	; 0x9c4 <__fp_round+0x20>
     9b0:	bb 0f       	add	r27, r27
     9b2:	40 f4       	brcc	.+16     	; 0x9c4 <__fp_round+0x20>
     9b4:	bf 2b       	or	r27, r31
     9b6:	11 f4       	brne	.+4      	; 0x9bc <__fp_round+0x18>
     9b8:	60 ff       	sbrs	r22, 0
     9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <__fp_round+0x20>
     9bc:	6f 5f       	subi	r22, 0xFF	; 255
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	8f 4f       	sbci	r24, 0xFF	; 255
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	08 95       	ret

000009c6 <__fp_split3>:
     9c6:	57 fd       	sbrc	r21, 7
     9c8:	90 58       	subi	r25, 0x80	; 128
     9ca:	44 0f       	add	r20, r20
     9cc:	55 1f       	adc	r21, r21
     9ce:	59 f0       	breq	.+22     	; 0x9e6 <__fp_splitA+0x10>
     9d0:	5f 3f       	cpi	r21, 0xFF	; 255
     9d2:	71 f0       	breq	.+28     	; 0x9f0 <__fp_splitA+0x1a>
     9d4:	47 95       	ror	r20

000009d6 <__fp_splitA>:
     9d6:	88 0f       	add	r24, r24
     9d8:	97 fb       	bst	r25, 7
     9da:	99 1f       	adc	r25, r25
     9dc:	61 f0       	breq	.+24     	; 0x9f6 <__fp_splitA+0x20>
     9de:	9f 3f       	cpi	r25, 0xFF	; 255
     9e0:	79 f0       	breq	.+30     	; 0xa00 <__fp_splitA+0x2a>
     9e2:	87 95       	ror	r24
     9e4:	08 95       	ret
     9e6:	12 16       	cp	r1, r18
     9e8:	13 06       	cpc	r1, r19
     9ea:	14 06       	cpc	r1, r20
     9ec:	55 1f       	adc	r21, r21
     9ee:	f2 cf       	rjmp	.-28     	; 0x9d4 <__fp_split3+0xe>
     9f0:	46 95       	lsr	r20
     9f2:	f1 df       	rcall	.-30     	; 0x9d6 <__fp_splitA>
     9f4:	08 c0       	rjmp	.+16     	; 0xa06 <__fp_splitA+0x30>
     9f6:	16 16       	cp	r1, r22
     9f8:	17 06       	cpc	r1, r23
     9fa:	18 06       	cpc	r1, r24
     9fc:	99 1f       	adc	r25, r25
     9fe:	f1 cf       	rjmp	.-30     	; 0x9e2 <__fp_splitA+0xc>
     a00:	86 95       	lsr	r24
     a02:	71 05       	cpc	r23, r1
     a04:	61 05       	cpc	r22, r1
     a06:	08 94       	sec
     a08:	08 95       	ret

00000a0a <__fp_zero>:
     a0a:	e8 94       	clt

00000a0c <__fp_szero>:
     a0c:	bb 27       	eor	r27, r27
     a0e:	66 27       	eor	r22, r22
     a10:	77 27       	eor	r23, r23
     a12:	cb 01       	movw	r24, r22
     a14:	97 f9       	bld	r25, 7
     a16:	08 95       	ret

00000a18 <__mulsf3>:
     a18:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__mulsf3x>
     a1c:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_round>
     a20:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscA>
     a24:	38 f0       	brcs	.+14     	; 0xa34 <__mulsf3+0x1c>
     a26:	0e 94 cb 04 	call	0x996	; 0x996 <__fp_pscB>
     a2a:	20 f0       	brcs	.+8      	; 0xa34 <__mulsf3+0x1c>
     a2c:	95 23       	and	r25, r21
     a2e:	11 f0       	breq	.+4      	; 0xa34 <__mulsf3+0x1c>
     a30:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_inf>
     a34:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_nan>
     a38:	11 24       	eor	r1, r1
     a3a:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__fp_szero>

00000a3e <__mulsf3x>:
     a3e:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fp_split3>
     a42:	70 f3       	brcs	.-36     	; 0xa20 <__mulsf3+0x8>

00000a44 <__mulsf3_pse>:
     a44:	95 9f       	mul	r25, r21
     a46:	c1 f3       	breq	.-16     	; 0xa38 <__mulsf3+0x20>
     a48:	95 0f       	add	r25, r21
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	55 1f       	adc	r21, r21
     a4e:	62 9f       	mul	r22, r18
     a50:	f0 01       	movw	r30, r0
     a52:	72 9f       	mul	r23, r18
     a54:	bb 27       	eor	r27, r27
     a56:	f0 0d       	add	r31, r0
     a58:	b1 1d       	adc	r27, r1
     a5a:	63 9f       	mul	r22, r19
     a5c:	aa 27       	eor	r26, r26
     a5e:	f0 0d       	add	r31, r0
     a60:	b1 1d       	adc	r27, r1
     a62:	aa 1f       	adc	r26, r26
     a64:	64 9f       	mul	r22, r20
     a66:	66 27       	eor	r22, r22
     a68:	b0 0d       	add	r27, r0
     a6a:	a1 1d       	adc	r26, r1
     a6c:	66 1f       	adc	r22, r22
     a6e:	82 9f       	mul	r24, r18
     a70:	22 27       	eor	r18, r18
     a72:	b0 0d       	add	r27, r0
     a74:	a1 1d       	adc	r26, r1
     a76:	62 1f       	adc	r22, r18
     a78:	73 9f       	mul	r23, r19
     a7a:	b0 0d       	add	r27, r0
     a7c:	a1 1d       	adc	r26, r1
     a7e:	62 1f       	adc	r22, r18
     a80:	83 9f       	mul	r24, r19
     a82:	a0 0d       	add	r26, r0
     a84:	61 1d       	adc	r22, r1
     a86:	22 1f       	adc	r18, r18
     a88:	74 9f       	mul	r23, r20
     a8a:	33 27       	eor	r19, r19
     a8c:	a0 0d       	add	r26, r0
     a8e:	61 1d       	adc	r22, r1
     a90:	23 1f       	adc	r18, r19
     a92:	84 9f       	mul	r24, r20
     a94:	60 0d       	add	r22, r0
     a96:	21 1d       	adc	r18, r1
     a98:	82 2f       	mov	r24, r18
     a9a:	76 2f       	mov	r23, r22
     a9c:	6a 2f       	mov	r22, r26
     a9e:	11 24       	eor	r1, r1
     aa0:	9f 57       	subi	r25, 0x7F	; 127
     aa2:	50 40       	sbci	r21, 0x00	; 0
     aa4:	9a f0       	brmi	.+38     	; 0xacc <__mulsf3_pse+0x88>
     aa6:	f1 f0       	breq	.+60     	; 0xae4 <__mulsf3_pse+0xa0>
     aa8:	88 23       	and	r24, r24
     aaa:	4a f0       	brmi	.+18     	; 0xabe <__mulsf3_pse+0x7a>
     aac:	ee 0f       	add	r30, r30
     aae:	ff 1f       	adc	r31, r31
     ab0:	bb 1f       	adc	r27, r27
     ab2:	66 1f       	adc	r22, r22
     ab4:	77 1f       	adc	r23, r23
     ab6:	88 1f       	adc	r24, r24
     ab8:	91 50       	subi	r25, 0x01	; 1
     aba:	50 40       	sbci	r21, 0x00	; 0
     abc:	a9 f7       	brne	.-22     	; 0xaa8 <__mulsf3_pse+0x64>
     abe:	9e 3f       	cpi	r25, 0xFE	; 254
     ac0:	51 05       	cpc	r21, r1
     ac2:	80 f0       	brcs	.+32     	; 0xae4 <__mulsf3_pse+0xa0>
     ac4:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_inf>
     ac8:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__fp_szero>
     acc:	5f 3f       	cpi	r21, 0xFF	; 255
     ace:	e4 f3       	brlt	.-8      	; 0xac8 <__mulsf3_pse+0x84>
     ad0:	98 3e       	cpi	r25, 0xE8	; 232
     ad2:	d4 f3       	brlt	.-12     	; 0xac8 <__mulsf3_pse+0x84>
     ad4:	86 95       	lsr	r24
     ad6:	77 95       	ror	r23
     ad8:	67 95       	ror	r22
     ada:	b7 95       	ror	r27
     adc:	f7 95       	ror	r31
     ade:	e7 95       	ror	r30
     ae0:	9f 5f       	subi	r25, 0xFF	; 255
     ae2:	c1 f7       	brne	.-16     	; 0xad4 <__mulsf3_pse+0x90>
     ae4:	fe 2b       	or	r31, r30
     ae6:	88 0f       	add	r24, r24
     ae8:	91 1d       	adc	r25, r1
     aea:	96 95       	lsr	r25
     aec:	87 95       	ror	r24
     aee:	97 f9       	bld	r25, 7
     af0:	08 95       	ret

00000af2 <__tablejump2__>:
     af2:	ee 0f       	add	r30, r30
     af4:	ff 1f       	adc	r31, r31
     af6:	05 90       	lpm	r0, Z+
     af8:	f4 91       	lpm	r31, Z
     afa:	e0 2d       	mov	r30, r0
     afc:	09 94       	ijmp

00000afe <sprintf>:
     afe:	ae e0       	ldi	r26, 0x0E	; 14
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__prologue_saves__+0x1c>
     b0a:	0d 89       	ldd	r16, Y+21	; 0x15
     b0c:	1e 89       	ldd	r17, Y+22	; 0x16
     b0e:	86 e0       	ldi	r24, 0x06	; 6
     b10:	8c 83       	std	Y+4, r24	; 0x04
     b12:	1a 83       	std	Y+2, r17	; 0x02
     b14:	09 83       	std	Y+1, r16	; 0x01
     b16:	8f ef       	ldi	r24, 0xFF	; 255
     b18:	9f e7       	ldi	r25, 0x7F	; 127
     b1a:	9e 83       	std	Y+6, r25	; 0x06
     b1c:	8d 83       	std	Y+5, r24	; 0x05
     b1e:	ae 01       	movw	r20, r28
     b20:	47 5e       	subi	r20, 0xE7	; 231
     b22:	5f 4f       	sbci	r21, 0xFF	; 255
     b24:	6f 89       	ldd	r22, Y+23	; 0x17
     b26:	78 8d       	ldd	r23, Y+24	; 0x18
     b28:	ce 01       	movw	r24, r28
     b2a:	01 96       	adiw	r24, 0x01	; 1
     b2c:	0e 94 a1 05 	call	0xb42	; 0xb42 <vfprintf>
     b30:	ef 81       	ldd	r30, Y+7	; 0x07
     b32:	f8 85       	ldd	r31, Y+8	; 0x08
     b34:	e0 0f       	add	r30, r16
     b36:	f1 1f       	adc	r31, r17
     b38:	10 82       	st	Z, r1
     b3a:	2e 96       	adiw	r28, 0x0e	; 14
     b3c:	e4 e0       	ldi	r30, 0x04	; 4
     b3e:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__epilogue_restores__+0x1c>

00000b42 <vfprintf>:
     b42:	ab e0       	ldi	r26, 0x0B	; 11
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	e7 ea       	ldi	r30, 0xA7	; 167
     b48:	f5 e0       	ldi	r31, 0x05	; 5
     b4a:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__prologue_saves__>
     b4e:	6c 01       	movw	r12, r24
     b50:	7b 01       	movw	r14, r22
     b52:	8a 01       	movw	r16, r20
     b54:	fc 01       	movw	r30, r24
     b56:	17 82       	std	Z+7, r1	; 0x07
     b58:	16 82       	std	Z+6, r1	; 0x06
     b5a:	83 81       	ldd	r24, Z+3	; 0x03
     b5c:	81 ff       	sbrs	r24, 1
     b5e:	cc c1       	rjmp	.+920    	; 0xef8 <vfprintf+0x3b6>
     b60:	ce 01       	movw	r24, r28
     b62:	01 96       	adiw	r24, 0x01	; 1
     b64:	3c 01       	movw	r6, r24
     b66:	f6 01       	movw	r30, r12
     b68:	93 81       	ldd	r25, Z+3	; 0x03
     b6a:	f7 01       	movw	r30, r14
     b6c:	93 fd       	sbrc	r25, 3
     b6e:	85 91       	lpm	r24, Z+
     b70:	93 ff       	sbrs	r25, 3
     b72:	81 91       	ld	r24, Z+
     b74:	7f 01       	movw	r14, r30
     b76:	88 23       	and	r24, r24
     b78:	09 f4       	brne	.+2      	; 0xb7c <vfprintf+0x3a>
     b7a:	ba c1       	rjmp	.+884    	; 0xef0 <vfprintf+0x3ae>
     b7c:	85 32       	cpi	r24, 0x25	; 37
     b7e:	39 f4       	brne	.+14     	; 0xb8e <vfprintf+0x4c>
     b80:	93 fd       	sbrc	r25, 3
     b82:	85 91       	lpm	r24, Z+
     b84:	93 ff       	sbrs	r25, 3
     b86:	81 91       	ld	r24, Z+
     b88:	7f 01       	movw	r14, r30
     b8a:	85 32       	cpi	r24, 0x25	; 37
     b8c:	29 f4       	brne	.+10     	; 0xb98 <vfprintf+0x56>
     b8e:	b6 01       	movw	r22, r12
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     b96:	e7 cf       	rjmp	.-50     	; 0xb66 <vfprintf+0x24>
     b98:	91 2c       	mov	r9, r1
     b9a:	21 2c       	mov	r2, r1
     b9c:	31 2c       	mov	r3, r1
     b9e:	ff e1       	ldi	r31, 0x1F	; 31
     ba0:	f3 15       	cp	r31, r3
     ba2:	d8 f0       	brcs	.+54     	; 0xbda <vfprintf+0x98>
     ba4:	8b 32       	cpi	r24, 0x2B	; 43
     ba6:	79 f0       	breq	.+30     	; 0xbc6 <vfprintf+0x84>
     ba8:	38 f4       	brcc	.+14     	; 0xbb8 <vfprintf+0x76>
     baa:	80 32       	cpi	r24, 0x20	; 32
     bac:	79 f0       	breq	.+30     	; 0xbcc <vfprintf+0x8a>
     bae:	83 32       	cpi	r24, 0x23	; 35
     bb0:	a1 f4       	brne	.+40     	; 0xbda <vfprintf+0x98>
     bb2:	23 2d       	mov	r18, r3
     bb4:	20 61       	ori	r18, 0x10	; 16
     bb6:	1d c0       	rjmp	.+58     	; 0xbf2 <vfprintf+0xb0>
     bb8:	8d 32       	cpi	r24, 0x2D	; 45
     bba:	61 f0       	breq	.+24     	; 0xbd4 <vfprintf+0x92>
     bbc:	80 33       	cpi	r24, 0x30	; 48
     bbe:	69 f4       	brne	.+26     	; 0xbda <vfprintf+0x98>
     bc0:	23 2d       	mov	r18, r3
     bc2:	21 60       	ori	r18, 0x01	; 1
     bc4:	16 c0       	rjmp	.+44     	; 0xbf2 <vfprintf+0xb0>
     bc6:	83 2d       	mov	r24, r3
     bc8:	82 60       	ori	r24, 0x02	; 2
     bca:	38 2e       	mov	r3, r24
     bcc:	e3 2d       	mov	r30, r3
     bce:	e4 60       	ori	r30, 0x04	; 4
     bd0:	3e 2e       	mov	r3, r30
     bd2:	2a c0       	rjmp	.+84     	; 0xc28 <vfprintf+0xe6>
     bd4:	f3 2d       	mov	r31, r3
     bd6:	f8 60       	ori	r31, 0x08	; 8
     bd8:	1d c0       	rjmp	.+58     	; 0xc14 <vfprintf+0xd2>
     bda:	37 fc       	sbrc	r3, 7
     bdc:	2d c0       	rjmp	.+90     	; 0xc38 <vfprintf+0xf6>
     bde:	20 ed       	ldi	r18, 0xD0	; 208
     be0:	28 0f       	add	r18, r24
     be2:	2a 30       	cpi	r18, 0x0A	; 10
     be4:	40 f0       	brcs	.+16     	; 0xbf6 <vfprintf+0xb4>
     be6:	8e 32       	cpi	r24, 0x2E	; 46
     be8:	b9 f4       	brne	.+46     	; 0xc18 <vfprintf+0xd6>
     bea:	36 fc       	sbrc	r3, 6
     bec:	81 c1       	rjmp	.+770    	; 0xef0 <vfprintf+0x3ae>
     bee:	23 2d       	mov	r18, r3
     bf0:	20 64       	ori	r18, 0x40	; 64
     bf2:	32 2e       	mov	r3, r18
     bf4:	19 c0       	rjmp	.+50     	; 0xc28 <vfprintf+0xe6>
     bf6:	36 fe       	sbrs	r3, 6
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0xc4>
     bfa:	8a e0       	ldi	r24, 0x0A	; 10
     bfc:	98 9e       	mul	r9, r24
     bfe:	20 0d       	add	r18, r0
     c00:	11 24       	eor	r1, r1
     c02:	92 2e       	mov	r9, r18
     c04:	11 c0       	rjmp	.+34     	; 0xc28 <vfprintf+0xe6>
     c06:	ea e0       	ldi	r30, 0x0A	; 10
     c08:	2e 9e       	mul	r2, r30
     c0a:	20 0d       	add	r18, r0
     c0c:	11 24       	eor	r1, r1
     c0e:	22 2e       	mov	r2, r18
     c10:	f3 2d       	mov	r31, r3
     c12:	f0 62       	ori	r31, 0x20	; 32
     c14:	3f 2e       	mov	r3, r31
     c16:	08 c0       	rjmp	.+16     	; 0xc28 <vfprintf+0xe6>
     c18:	8c 36       	cpi	r24, 0x6C	; 108
     c1a:	21 f4       	brne	.+8      	; 0xc24 <vfprintf+0xe2>
     c1c:	83 2d       	mov	r24, r3
     c1e:	80 68       	ori	r24, 0x80	; 128
     c20:	38 2e       	mov	r3, r24
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <vfprintf+0xe6>
     c24:	88 36       	cpi	r24, 0x68	; 104
     c26:	41 f4       	brne	.+16     	; 0xc38 <vfprintf+0xf6>
     c28:	f7 01       	movw	r30, r14
     c2a:	93 fd       	sbrc	r25, 3
     c2c:	85 91       	lpm	r24, Z+
     c2e:	93 ff       	sbrs	r25, 3
     c30:	81 91       	ld	r24, Z+
     c32:	7f 01       	movw	r14, r30
     c34:	81 11       	cpse	r24, r1
     c36:	b3 cf       	rjmp	.-154    	; 0xb9e <vfprintf+0x5c>
     c38:	98 2f       	mov	r25, r24
     c3a:	9f 7d       	andi	r25, 0xDF	; 223
     c3c:	95 54       	subi	r25, 0x45	; 69
     c3e:	93 30       	cpi	r25, 0x03	; 3
     c40:	28 f4       	brcc	.+10     	; 0xc4c <vfprintf+0x10a>
     c42:	0c 5f       	subi	r16, 0xFC	; 252
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	9f e3       	ldi	r25, 0x3F	; 63
     c48:	99 83       	std	Y+1, r25	; 0x01
     c4a:	0d c0       	rjmp	.+26     	; 0xc66 <vfprintf+0x124>
     c4c:	83 36       	cpi	r24, 0x63	; 99
     c4e:	31 f0       	breq	.+12     	; 0xc5c <vfprintf+0x11a>
     c50:	83 37       	cpi	r24, 0x73	; 115
     c52:	71 f0       	breq	.+28     	; 0xc70 <vfprintf+0x12e>
     c54:	83 35       	cpi	r24, 0x53	; 83
     c56:	09 f0       	breq	.+2      	; 0xc5a <vfprintf+0x118>
     c58:	59 c0       	rjmp	.+178    	; 0xd0c <vfprintf+0x1ca>
     c5a:	21 c0       	rjmp	.+66     	; 0xc9e <vfprintf+0x15c>
     c5c:	f8 01       	movw	r30, r16
     c5e:	80 81       	ld	r24, Z
     c60:	89 83       	std	Y+1, r24	; 0x01
     c62:	0e 5f       	subi	r16, 0xFE	; 254
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	88 24       	eor	r8, r8
     c68:	83 94       	inc	r8
     c6a:	91 2c       	mov	r9, r1
     c6c:	53 01       	movw	r10, r6
     c6e:	13 c0       	rjmp	.+38     	; 0xc96 <vfprintf+0x154>
     c70:	28 01       	movw	r4, r16
     c72:	f2 e0       	ldi	r31, 0x02	; 2
     c74:	4f 0e       	add	r4, r31
     c76:	51 1c       	adc	r5, r1
     c78:	f8 01       	movw	r30, r16
     c7a:	a0 80       	ld	r10, Z
     c7c:	b1 80       	ldd	r11, Z+1	; 0x01
     c7e:	36 fe       	sbrs	r3, 6
     c80:	03 c0       	rjmp	.+6      	; 0xc88 <vfprintf+0x146>
     c82:	69 2d       	mov	r22, r9
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x14a>
     c88:	6f ef       	ldi	r22, 0xFF	; 255
     c8a:	7f ef       	ldi	r23, 0xFF	; 255
     c8c:	c5 01       	movw	r24, r10
     c8e:	0e 94 8d 07 	call	0xf1a	; 0xf1a <strnlen>
     c92:	4c 01       	movw	r8, r24
     c94:	82 01       	movw	r16, r4
     c96:	f3 2d       	mov	r31, r3
     c98:	ff 77       	andi	r31, 0x7F	; 127
     c9a:	3f 2e       	mov	r3, r31
     c9c:	16 c0       	rjmp	.+44     	; 0xcca <vfprintf+0x188>
     c9e:	28 01       	movw	r4, r16
     ca0:	22 e0       	ldi	r18, 0x02	; 2
     ca2:	42 0e       	add	r4, r18
     ca4:	51 1c       	adc	r5, r1
     ca6:	f8 01       	movw	r30, r16
     ca8:	a0 80       	ld	r10, Z
     caa:	b1 80       	ldd	r11, Z+1	; 0x01
     cac:	36 fe       	sbrs	r3, 6
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x174>
     cb0:	69 2d       	mov	r22, r9
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x178>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	c5 01       	movw	r24, r10
     cbc:	0e 94 82 07 	call	0xf04	; 0xf04 <strnlen_P>
     cc0:	4c 01       	movw	r8, r24
     cc2:	f3 2d       	mov	r31, r3
     cc4:	f0 68       	ori	r31, 0x80	; 128
     cc6:	3f 2e       	mov	r3, r31
     cc8:	82 01       	movw	r16, r4
     cca:	33 fc       	sbrc	r3, 3
     ccc:	1b c0       	rjmp	.+54     	; 0xd04 <vfprintf+0x1c2>
     cce:	82 2d       	mov	r24, r2
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	88 16       	cp	r8, r24
     cd4:	99 06       	cpc	r9, r25
     cd6:	b0 f4       	brcc	.+44     	; 0xd04 <vfprintf+0x1c2>
     cd8:	b6 01       	movw	r22, r12
     cda:	80 e2       	ldi	r24, 0x20	; 32
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     ce2:	2a 94       	dec	r2
     ce4:	f4 cf       	rjmp	.-24     	; 0xcce <vfprintf+0x18c>
     ce6:	f5 01       	movw	r30, r10
     ce8:	37 fc       	sbrc	r3, 7
     cea:	85 91       	lpm	r24, Z+
     cec:	37 fe       	sbrs	r3, 7
     cee:	81 91       	ld	r24, Z+
     cf0:	5f 01       	movw	r10, r30
     cf2:	b6 01       	movw	r22, r12
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     cfa:	21 10       	cpse	r2, r1
     cfc:	2a 94       	dec	r2
     cfe:	21 e0       	ldi	r18, 0x01	; 1
     d00:	82 1a       	sub	r8, r18
     d02:	91 08       	sbc	r9, r1
     d04:	81 14       	cp	r8, r1
     d06:	91 04       	cpc	r9, r1
     d08:	71 f7       	brne	.-36     	; 0xce6 <vfprintf+0x1a4>
     d0a:	e8 c0       	rjmp	.+464    	; 0xedc <vfprintf+0x39a>
     d0c:	84 36       	cpi	r24, 0x64	; 100
     d0e:	11 f0       	breq	.+4      	; 0xd14 <vfprintf+0x1d2>
     d10:	89 36       	cpi	r24, 0x69	; 105
     d12:	41 f5       	brne	.+80     	; 0xd64 <vfprintf+0x222>
     d14:	f8 01       	movw	r30, r16
     d16:	37 fe       	sbrs	r3, 7
     d18:	07 c0       	rjmp	.+14     	; 0xd28 <vfprintf+0x1e6>
     d1a:	60 81       	ld	r22, Z
     d1c:	71 81       	ldd	r23, Z+1	; 0x01
     d1e:	82 81       	ldd	r24, Z+2	; 0x02
     d20:	93 81       	ldd	r25, Z+3	; 0x03
     d22:	0c 5f       	subi	r16, 0xFC	; 252
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	08 c0       	rjmp	.+16     	; 0xd38 <vfprintf+0x1f6>
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	07 2e       	mov	r0, r23
     d2e:	00 0c       	add	r0, r0
     d30:	88 0b       	sbc	r24, r24
     d32:	99 0b       	sbc	r25, r25
     d34:	0e 5f       	subi	r16, 0xFE	; 254
     d36:	1f 4f       	sbci	r17, 0xFF	; 255
     d38:	f3 2d       	mov	r31, r3
     d3a:	ff 76       	andi	r31, 0x6F	; 111
     d3c:	3f 2e       	mov	r3, r31
     d3e:	97 ff       	sbrs	r25, 7
     d40:	09 c0       	rjmp	.+18     	; 0xd54 <vfprintf+0x212>
     d42:	90 95       	com	r25
     d44:	80 95       	com	r24
     d46:	70 95       	com	r23
     d48:	61 95       	neg	r22
     d4a:	7f 4f       	sbci	r23, 0xFF	; 255
     d4c:	8f 4f       	sbci	r24, 0xFF	; 255
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	f0 68       	ori	r31, 0x80	; 128
     d52:	3f 2e       	mov	r3, r31
     d54:	2a e0       	ldi	r18, 0x0A	; 10
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	a3 01       	movw	r20, r6
     d5a:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__ultoa_invert>
     d5e:	88 2e       	mov	r8, r24
     d60:	86 18       	sub	r8, r6
     d62:	45 c0       	rjmp	.+138    	; 0xdee <vfprintf+0x2ac>
     d64:	85 37       	cpi	r24, 0x75	; 117
     d66:	31 f4       	brne	.+12     	; 0xd74 <vfprintf+0x232>
     d68:	23 2d       	mov	r18, r3
     d6a:	2f 7e       	andi	r18, 0xEF	; 239
     d6c:	b2 2e       	mov	r11, r18
     d6e:	2a e0       	ldi	r18, 0x0A	; 10
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	25 c0       	rjmp	.+74     	; 0xdbe <vfprintf+0x27c>
     d74:	93 2d       	mov	r25, r3
     d76:	99 7f       	andi	r25, 0xF9	; 249
     d78:	b9 2e       	mov	r11, r25
     d7a:	8f 36       	cpi	r24, 0x6F	; 111
     d7c:	c1 f0       	breq	.+48     	; 0xdae <vfprintf+0x26c>
     d7e:	18 f4       	brcc	.+6      	; 0xd86 <vfprintf+0x244>
     d80:	88 35       	cpi	r24, 0x58	; 88
     d82:	79 f0       	breq	.+30     	; 0xda2 <vfprintf+0x260>
     d84:	b5 c0       	rjmp	.+362    	; 0xef0 <vfprintf+0x3ae>
     d86:	80 37       	cpi	r24, 0x70	; 112
     d88:	19 f0       	breq	.+6      	; 0xd90 <vfprintf+0x24e>
     d8a:	88 37       	cpi	r24, 0x78	; 120
     d8c:	21 f0       	breq	.+8      	; 0xd96 <vfprintf+0x254>
     d8e:	b0 c0       	rjmp	.+352    	; 0xef0 <vfprintf+0x3ae>
     d90:	e9 2f       	mov	r30, r25
     d92:	e0 61       	ori	r30, 0x10	; 16
     d94:	be 2e       	mov	r11, r30
     d96:	b4 fe       	sbrs	r11, 4
     d98:	0d c0       	rjmp	.+26     	; 0xdb4 <vfprintf+0x272>
     d9a:	fb 2d       	mov	r31, r11
     d9c:	f4 60       	ori	r31, 0x04	; 4
     d9e:	bf 2e       	mov	r11, r31
     da0:	09 c0       	rjmp	.+18     	; 0xdb4 <vfprintf+0x272>
     da2:	34 fe       	sbrs	r3, 4
     da4:	0a c0       	rjmp	.+20     	; 0xdba <vfprintf+0x278>
     da6:	29 2f       	mov	r18, r25
     da8:	26 60       	ori	r18, 0x06	; 6
     daa:	b2 2e       	mov	r11, r18
     dac:	06 c0       	rjmp	.+12     	; 0xdba <vfprintf+0x278>
     dae:	28 e0       	ldi	r18, 0x08	; 8
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	05 c0       	rjmp	.+10     	; 0xdbe <vfprintf+0x27c>
     db4:	20 e1       	ldi	r18, 0x10	; 16
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0x27c>
     dba:	20 e1       	ldi	r18, 0x10	; 16
     dbc:	32 e0       	ldi	r19, 0x02	; 2
     dbe:	f8 01       	movw	r30, r16
     dc0:	b7 fe       	sbrs	r11, 7
     dc2:	07 c0       	rjmp	.+14     	; 0xdd2 <vfprintf+0x290>
     dc4:	60 81       	ld	r22, Z
     dc6:	71 81       	ldd	r23, Z+1	; 0x01
     dc8:	82 81       	ldd	r24, Z+2	; 0x02
     dca:	93 81       	ldd	r25, Z+3	; 0x03
     dcc:	0c 5f       	subi	r16, 0xFC	; 252
     dce:	1f 4f       	sbci	r17, 0xFF	; 255
     dd0:	06 c0       	rjmp	.+12     	; 0xdde <vfprintf+0x29c>
     dd2:	60 81       	ld	r22, Z
     dd4:	71 81       	ldd	r23, Z+1	; 0x01
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 5f       	subi	r16, 0xFE	; 254
     ddc:	1f 4f       	sbci	r17, 0xFF	; 255
     dde:	a3 01       	movw	r20, r6
     de0:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__ultoa_invert>
     de4:	88 2e       	mov	r8, r24
     de6:	86 18       	sub	r8, r6
     de8:	fb 2d       	mov	r31, r11
     dea:	ff 77       	andi	r31, 0x7F	; 127
     dec:	3f 2e       	mov	r3, r31
     dee:	36 fe       	sbrs	r3, 6
     df0:	0d c0       	rjmp	.+26     	; 0xe0c <vfprintf+0x2ca>
     df2:	23 2d       	mov	r18, r3
     df4:	2e 7f       	andi	r18, 0xFE	; 254
     df6:	a2 2e       	mov	r10, r18
     df8:	89 14       	cp	r8, r9
     dfa:	58 f4       	brcc	.+22     	; 0xe12 <vfprintf+0x2d0>
     dfc:	34 fe       	sbrs	r3, 4
     dfe:	0b c0       	rjmp	.+22     	; 0xe16 <vfprintf+0x2d4>
     e00:	32 fc       	sbrc	r3, 2
     e02:	09 c0       	rjmp	.+18     	; 0xe16 <vfprintf+0x2d4>
     e04:	83 2d       	mov	r24, r3
     e06:	8e 7e       	andi	r24, 0xEE	; 238
     e08:	a8 2e       	mov	r10, r24
     e0a:	05 c0       	rjmp	.+10     	; 0xe16 <vfprintf+0x2d4>
     e0c:	b8 2c       	mov	r11, r8
     e0e:	a3 2c       	mov	r10, r3
     e10:	03 c0       	rjmp	.+6      	; 0xe18 <vfprintf+0x2d6>
     e12:	b8 2c       	mov	r11, r8
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <vfprintf+0x2d6>
     e16:	b9 2c       	mov	r11, r9
     e18:	a4 fe       	sbrs	r10, 4
     e1a:	0f c0       	rjmp	.+30     	; 0xe3a <vfprintf+0x2f8>
     e1c:	fe 01       	movw	r30, r28
     e1e:	e8 0d       	add	r30, r8
     e20:	f1 1d       	adc	r31, r1
     e22:	80 81       	ld	r24, Z
     e24:	80 33       	cpi	r24, 0x30	; 48
     e26:	21 f4       	brne	.+8      	; 0xe30 <vfprintf+0x2ee>
     e28:	9a 2d       	mov	r25, r10
     e2a:	99 7e       	andi	r25, 0xE9	; 233
     e2c:	a9 2e       	mov	r10, r25
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <vfprintf+0x300>
     e30:	a2 fe       	sbrs	r10, 2
     e32:	06 c0       	rjmp	.+12     	; 0xe40 <vfprintf+0x2fe>
     e34:	b3 94       	inc	r11
     e36:	b3 94       	inc	r11
     e38:	04 c0       	rjmp	.+8      	; 0xe42 <vfprintf+0x300>
     e3a:	8a 2d       	mov	r24, r10
     e3c:	86 78       	andi	r24, 0x86	; 134
     e3e:	09 f0       	breq	.+2      	; 0xe42 <vfprintf+0x300>
     e40:	b3 94       	inc	r11
     e42:	a3 fc       	sbrc	r10, 3
     e44:	11 c0       	rjmp	.+34     	; 0xe68 <vfprintf+0x326>
     e46:	a0 fe       	sbrs	r10, 0
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0x314>
     e4a:	b2 14       	cp	r11, r2
     e4c:	88 f4       	brcc	.+34     	; 0xe70 <vfprintf+0x32e>
     e4e:	28 0c       	add	r2, r8
     e50:	92 2c       	mov	r9, r2
     e52:	9b 18       	sub	r9, r11
     e54:	0e c0       	rjmp	.+28     	; 0xe72 <vfprintf+0x330>
     e56:	b2 14       	cp	r11, r2
     e58:	60 f4       	brcc	.+24     	; 0xe72 <vfprintf+0x330>
     e5a:	b6 01       	movw	r22, r12
     e5c:	80 e2       	ldi	r24, 0x20	; 32
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     e64:	b3 94       	inc	r11
     e66:	f7 cf       	rjmp	.-18     	; 0xe56 <vfprintf+0x314>
     e68:	b2 14       	cp	r11, r2
     e6a:	18 f4       	brcc	.+6      	; 0xe72 <vfprintf+0x330>
     e6c:	2b 18       	sub	r2, r11
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0x332>
     e70:	98 2c       	mov	r9, r8
     e72:	21 2c       	mov	r2, r1
     e74:	a4 fe       	sbrs	r10, 4
     e76:	10 c0       	rjmp	.+32     	; 0xe98 <vfprintf+0x356>
     e78:	b6 01       	movw	r22, r12
     e7a:	80 e3       	ldi	r24, 0x30	; 48
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     e82:	a2 fe       	sbrs	r10, 2
     e84:	17 c0       	rjmp	.+46     	; 0xeb4 <vfprintf+0x372>
     e86:	a1 fc       	sbrc	r10, 1
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <vfprintf+0x34e>
     e8a:	88 e7       	ldi	r24, 0x78	; 120
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <vfprintf+0x352>
     e90:	88 e5       	ldi	r24, 0x58	; 88
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	b6 01       	movw	r22, r12
     e96:	0c c0       	rjmp	.+24     	; 0xeb0 <vfprintf+0x36e>
     e98:	8a 2d       	mov	r24, r10
     e9a:	86 78       	andi	r24, 0x86	; 134
     e9c:	59 f0       	breq	.+22     	; 0xeb4 <vfprintf+0x372>
     e9e:	a1 fe       	sbrs	r10, 1
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <vfprintf+0x364>
     ea2:	8b e2       	ldi	r24, 0x2B	; 43
     ea4:	01 c0       	rjmp	.+2      	; 0xea8 <vfprintf+0x366>
     ea6:	80 e2       	ldi	r24, 0x20	; 32
     ea8:	a7 fc       	sbrc	r10, 7
     eaa:	8d e2       	ldi	r24, 0x2D	; 45
     eac:	b6 01       	movw	r22, r12
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     eb4:	89 14       	cp	r8, r9
     eb6:	38 f4       	brcc	.+14     	; 0xec6 <vfprintf+0x384>
     eb8:	b6 01       	movw	r22, r12
     eba:	80 e3       	ldi	r24, 0x30	; 48
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     ec2:	9a 94       	dec	r9
     ec4:	f7 cf       	rjmp	.-18     	; 0xeb4 <vfprintf+0x372>
     ec6:	8a 94       	dec	r8
     ec8:	f3 01       	movw	r30, r6
     eca:	e8 0d       	add	r30, r8
     ecc:	f1 1d       	adc	r31, r1
     ece:	80 81       	ld	r24, Z
     ed0:	b6 01       	movw	r22, r12
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     ed8:	81 10       	cpse	r8, r1
     eda:	f5 cf       	rjmp	.-22     	; 0xec6 <vfprintf+0x384>
     edc:	22 20       	and	r2, r2
     ede:	09 f4       	brne	.+2      	; 0xee2 <vfprintf+0x3a0>
     ee0:	42 ce       	rjmp	.-892    	; 0xb66 <vfprintf+0x24>
     ee2:	b6 01       	movw	r22, r12
     ee4:	80 e2       	ldi	r24, 0x20	; 32
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 98 07 	call	0xf30	; 0xf30 <fputc>
     eec:	2a 94       	dec	r2
     eee:	f6 cf       	rjmp	.-20     	; 0xedc <vfprintf+0x39a>
     ef0:	f6 01       	movw	r30, r12
     ef2:	86 81       	ldd	r24, Z+6	; 0x06
     ef4:	97 81       	ldd	r25, Z+7	; 0x07
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <vfprintf+0x3ba>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	2b 96       	adiw	r28, 0x0b	; 11
     efe:	e2 e1       	ldi	r30, 0x12	; 18
     f00:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__epilogue_restores__>

00000f04 <strnlen_P>:
     f04:	fc 01       	movw	r30, r24
     f06:	05 90       	lpm	r0, Z+
     f08:	61 50       	subi	r22, 0x01	; 1
     f0a:	70 40       	sbci	r23, 0x00	; 0
     f0c:	01 10       	cpse	r0, r1
     f0e:	d8 f7       	brcc	.-10     	; 0xf06 <strnlen_P+0x2>
     f10:	80 95       	com	r24
     f12:	90 95       	com	r25
     f14:	8e 0f       	add	r24, r30
     f16:	9f 1f       	adc	r25, r31
     f18:	08 95       	ret

00000f1a <strnlen>:
     f1a:	fc 01       	movw	r30, r24
     f1c:	61 50       	subi	r22, 0x01	; 1
     f1e:	70 40       	sbci	r23, 0x00	; 0
     f20:	01 90       	ld	r0, Z+
     f22:	01 10       	cpse	r0, r1
     f24:	d8 f7       	brcc	.-10     	; 0xf1c <strnlen+0x2>
     f26:	80 95       	com	r24
     f28:	90 95       	com	r25
     f2a:	8e 0f       	add	r24, r30
     f2c:	9f 1f       	adc	r25, r31
     f2e:	08 95       	ret

00000f30 <fputc>:
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	fb 01       	movw	r30, r22
     f3a:	23 81       	ldd	r18, Z+3	; 0x03
     f3c:	21 fd       	sbrc	r18, 1
     f3e:	03 c0       	rjmp	.+6      	; 0xf46 <fputc+0x16>
     f40:	8f ef       	ldi	r24, 0xFF	; 255
     f42:	9f ef       	ldi	r25, 0xFF	; 255
     f44:	2c c0       	rjmp	.+88     	; 0xf9e <fputc+0x6e>
     f46:	22 ff       	sbrs	r18, 2
     f48:	16 c0       	rjmp	.+44     	; 0xf76 <fputc+0x46>
     f4a:	46 81       	ldd	r20, Z+6	; 0x06
     f4c:	57 81       	ldd	r21, Z+7	; 0x07
     f4e:	24 81       	ldd	r18, Z+4	; 0x04
     f50:	35 81       	ldd	r19, Z+5	; 0x05
     f52:	42 17       	cp	r20, r18
     f54:	53 07       	cpc	r21, r19
     f56:	44 f4       	brge	.+16     	; 0xf68 <fputc+0x38>
     f58:	a0 81       	ld	r26, Z
     f5a:	b1 81       	ldd	r27, Z+1	; 0x01
     f5c:	9d 01       	movw	r18, r26
     f5e:	2f 5f       	subi	r18, 0xFF	; 255
     f60:	3f 4f       	sbci	r19, 0xFF	; 255
     f62:	31 83       	std	Z+1, r19	; 0x01
     f64:	20 83       	st	Z, r18
     f66:	8c 93       	st	X, r24
     f68:	26 81       	ldd	r18, Z+6	; 0x06
     f6a:	37 81       	ldd	r19, Z+7	; 0x07
     f6c:	2f 5f       	subi	r18, 0xFF	; 255
     f6e:	3f 4f       	sbci	r19, 0xFF	; 255
     f70:	37 83       	std	Z+7, r19	; 0x07
     f72:	26 83       	std	Z+6, r18	; 0x06
     f74:	14 c0       	rjmp	.+40     	; 0xf9e <fputc+0x6e>
     f76:	8b 01       	movw	r16, r22
     f78:	ec 01       	movw	r28, r24
     f7a:	fb 01       	movw	r30, r22
     f7c:	00 84       	ldd	r0, Z+8	; 0x08
     f7e:	f1 85       	ldd	r31, Z+9	; 0x09
     f80:	e0 2d       	mov	r30, r0
     f82:	09 95       	icall
     f84:	89 2b       	or	r24, r25
     f86:	e1 f6       	brne	.-72     	; 0xf40 <fputc+0x10>
     f88:	d8 01       	movw	r26, r16
     f8a:	16 96       	adiw	r26, 0x06	; 6
     f8c:	8d 91       	ld	r24, X+
     f8e:	9c 91       	ld	r25, X
     f90:	17 97       	sbiw	r26, 0x07	; 7
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	17 96       	adiw	r26, 0x07	; 7
     f96:	9c 93       	st	X, r25
     f98:	8e 93       	st	-X, r24
     f9a:	16 97       	sbiw	r26, 0x06	; 6
     f9c:	ce 01       	movw	r24, r28
     f9e:	df 91       	pop	r29
     fa0:	cf 91       	pop	r28
     fa2:	1f 91       	pop	r17
     fa4:	0f 91       	pop	r16
     fa6:	08 95       	ret

00000fa8 <__ultoa_invert>:
     fa8:	fa 01       	movw	r30, r20
     faa:	aa 27       	eor	r26, r26
     fac:	28 30       	cpi	r18, 0x08	; 8
     fae:	51 f1       	breq	.+84     	; 0x1004 <__ultoa_invert+0x5c>
     fb0:	20 31       	cpi	r18, 0x10	; 16
     fb2:	81 f1       	breq	.+96     	; 0x1014 <__ultoa_invert+0x6c>
     fb4:	e8 94       	clt
     fb6:	6f 93       	push	r22
     fb8:	6e 7f       	andi	r22, 0xFE	; 254
     fba:	6e 5f       	subi	r22, 0xFE	; 254
     fbc:	7f 4f       	sbci	r23, 0xFF	; 255
     fbe:	8f 4f       	sbci	r24, 0xFF	; 255
     fc0:	9f 4f       	sbci	r25, 0xFF	; 255
     fc2:	af 4f       	sbci	r26, 0xFF	; 255
     fc4:	b1 e0       	ldi	r27, 0x01	; 1
     fc6:	3e d0       	rcall	.+124    	; 0x1044 <__ultoa_invert+0x9c>
     fc8:	b4 e0       	ldi	r27, 0x04	; 4
     fca:	3c d0       	rcall	.+120    	; 0x1044 <__ultoa_invert+0x9c>
     fcc:	67 0f       	add	r22, r23
     fce:	78 1f       	adc	r23, r24
     fd0:	89 1f       	adc	r24, r25
     fd2:	9a 1f       	adc	r25, r26
     fd4:	a1 1d       	adc	r26, r1
     fd6:	68 0f       	add	r22, r24
     fd8:	79 1f       	adc	r23, r25
     fda:	8a 1f       	adc	r24, r26
     fdc:	91 1d       	adc	r25, r1
     fde:	a1 1d       	adc	r26, r1
     fe0:	6a 0f       	add	r22, r26
     fe2:	71 1d       	adc	r23, r1
     fe4:	81 1d       	adc	r24, r1
     fe6:	91 1d       	adc	r25, r1
     fe8:	a1 1d       	adc	r26, r1
     fea:	20 d0       	rcall	.+64     	; 0x102c <__ultoa_invert+0x84>
     fec:	09 f4       	brne	.+2      	; 0xff0 <__ultoa_invert+0x48>
     fee:	68 94       	set
     ff0:	3f 91       	pop	r19
     ff2:	2a e0       	ldi	r18, 0x0A	; 10
     ff4:	26 9f       	mul	r18, r22
     ff6:	11 24       	eor	r1, r1
     ff8:	30 19       	sub	r19, r0
     ffa:	30 5d       	subi	r19, 0xD0	; 208
     ffc:	31 93       	st	Z+, r19
     ffe:	de f6       	brtc	.-74     	; 0xfb6 <__ultoa_invert+0xe>
    1000:	cf 01       	movw	r24, r30
    1002:	08 95       	ret
    1004:	46 2f       	mov	r20, r22
    1006:	47 70       	andi	r20, 0x07	; 7
    1008:	40 5d       	subi	r20, 0xD0	; 208
    100a:	41 93       	st	Z+, r20
    100c:	b3 e0       	ldi	r27, 0x03	; 3
    100e:	0f d0       	rcall	.+30     	; 0x102e <__ultoa_invert+0x86>
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__ultoa_invert+0x5c>
    1012:	f6 cf       	rjmp	.-20     	; 0x1000 <__ultoa_invert+0x58>
    1014:	46 2f       	mov	r20, r22
    1016:	4f 70       	andi	r20, 0x0F	; 15
    1018:	40 5d       	subi	r20, 0xD0	; 208
    101a:	4a 33       	cpi	r20, 0x3A	; 58
    101c:	18 f0       	brcs	.+6      	; 0x1024 <__ultoa_invert+0x7c>
    101e:	49 5d       	subi	r20, 0xD9	; 217
    1020:	31 fd       	sbrc	r19, 1
    1022:	40 52       	subi	r20, 0x20	; 32
    1024:	41 93       	st	Z+, r20
    1026:	02 d0       	rcall	.+4      	; 0x102c <__ultoa_invert+0x84>
    1028:	a9 f7       	brne	.-22     	; 0x1014 <__ultoa_invert+0x6c>
    102a:	ea cf       	rjmp	.-44     	; 0x1000 <__ultoa_invert+0x58>
    102c:	b4 e0       	ldi	r27, 0x04	; 4
    102e:	a6 95       	lsr	r26
    1030:	97 95       	ror	r25
    1032:	87 95       	ror	r24
    1034:	77 95       	ror	r23
    1036:	67 95       	ror	r22
    1038:	ba 95       	dec	r27
    103a:	c9 f7       	brne	.-14     	; 0x102e <__ultoa_invert+0x86>
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	61 05       	cpc	r22, r1
    1040:	71 05       	cpc	r23, r1
    1042:	08 95       	ret
    1044:	9b 01       	movw	r18, r22
    1046:	ac 01       	movw	r20, r24
    1048:	0a 2e       	mov	r0, r26
    104a:	06 94       	lsr	r0
    104c:	57 95       	ror	r21
    104e:	47 95       	ror	r20
    1050:	37 95       	ror	r19
    1052:	27 95       	ror	r18
    1054:	ba 95       	dec	r27
    1056:	c9 f7       	brne	.-14     	; 0x104a <__ultoa_invert+0xa2>
    1058:	62 0f       	add	r22, r18
    105a:	73 1f       	adc	r23, r19
    105c:	84 1f       	adc	r24, r20
    105e:	95 1f       	adc	r25, r21
    1060:	a0 1d       	adc	r26, r0
    1062:	08 95       	ret

00001064 <__prologue_saves__>:
    1064:	2f 92       	push	r2
    1066:	3f 92       	push	r3
    1068:	4f 92       	push	r4
    106a:	5f 92       	push	r5
    106c:	6f 92       	push	r6
    106e:	7f 92       	push	r7
    1070:	8f 92       	push	r8
    1072:	9f 92       	push	r9
    1074:	af 92       	push	r10
    1076:	bf 92       	push	r11
    1078:	cf 92       	push	r12
    107a:	df 92       	push	r13
    107c:	ef 92       	push	r14
    107e:	ff 92       	push	r15
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	cf 93       	push	r28
    1086:	df 93       	push	r29
    1088:	cd b7       	in	r28, 0x3d	; 61
    108a:	de b7       	in	r29, 0x3e	; 62
    108c:	ca 1b       	sub	r28, r26
    108e:	db 0b       	sbc	r29, r27
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	de bf       	out	0x3e, r29	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	cd bf       	out	0x3d, r28	; 61
    109a:	09 94       	ijmp

0000109c <__epilogue_restores__>:
    109c:	2a 88       	ldd	r2, Y+18	; 0x12
    109e:	39 88       	ldd	r3, Y+17	; 0x11
    10a0:	48 88       	ldd	r4, Y+16	; 0x10
    10a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    10a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    10a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    10a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    10aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    10ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    10ae:	b9 84       	ldd	r11, Y+9	; 0x09
    10b0:	c8 84       	ldd	r12, Y+8	; 0x08
    10b2:	df 80       	ldd	r13, Y+7	; 0x07
    10b4:	ee 80       	ldd	r14, Y+6	; 0x06
    10b6:	fd 80       	ldd	r15, Y+5	; 0x05
    10b8:	0c 81       	ldd	r16, Y+4	; 0x04
    10ba:	1b 81       	ldd	r17, Y+3	; 0x03
    10bc:	aa 81       	ldd	r26, Y+2	; 0x02
    10be:	b9 81       	ldd	r27, Y+1	; 0x01
    10c0:	ce 0f       	add	r28, r30
    10c2:	d1 1d       	adc	r29, r1
    10c4:	0f b6       	in	r0, 0x3f	; 63
    10c6:	f8 94       	cli
    10c8:	de bf       	out	0x3e, r29	; 62
    10ca:	0f be       	out	0x3f, r0	; 63
    10cc:	cd bf       	out	0x3d, r28	; 61
    10ce:	ed 01       	movw	r28, r26
    10d0:	08 95       	ret

000010d2 <_exit>:
    10d2:	f8 94       	cli

000010d4 <__stop_program>:
    10d4:	ff cf       	rjmp	.-2      	; 0x10d4 <__stop_program>
